{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { ClarityModule } from '@clr/angular';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error = {\n    active: false,\n    message: ''\n  }\n\n  form = {\n    email: '',\n    password: '',\n    strategy: 'local'\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  login() {\n    this.authService.logIn(this.form)\n      .then( res => {\n        if(res.accessToken) {\n          this.router.navigate(['/']);\n        }\n      })\n      .catch( err => {\n        this.error.active = true;\n        this.error.message = err.message;\n      })\n  }\n\n}\n","<div class=\"login-wrapper\">\n  <form class=\"login\">\n      <section class=\"title\">\n          <h3 class=\"welcome\">Welcome to</h3>\n          Node Ticket System\n          <h5 class=\"hint\">Use your email address to sign in.</h5>\n      </section>\n      <div class=\"login-group\">\n          <clr-select-container>\n              <label class=\"clr-sr-only\">User Role</label>\n              <select clrSelect name=\"strategy\" [(ngModel)]=\"form.strategy\">\n                  <option value=\"local\">Local Users</option>\n                  <option value=\"ldap\">Active Directory</option>\n              </select>\n          </clr-select-container>\n          <clr-input-container>\n              <label class=\"clr-sr-only\">Username</label>\n              <input type=\"text\" name=\"username\" clrInput placeholder=\"Email\" [(ngModel)]=\"form.email\"/>\n          </clr-input-container>\n          <clr-password-container>\n              <label class=\"clr-sr-only\">Password</label>\n              <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n          </clr-password-container>\n          <!-- <clr-checkbox-wrapper>\n              <label>Remember me</label>\n              <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n          </clr-checkbox-wrapper> -->\n          <div class=\"error active\" *ngIf=\"error.active\">\n              {{ error.message }}\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">\n              Sign In\n          </button>\n          <!-- <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a> -->\n      </div>\n  </form>\n</div>"],"sourceRoot":"webpack:///"}