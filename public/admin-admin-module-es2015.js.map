{"version":3,"sources":["./src/app/admin/admin-access-management/admin-access-management.component.ts","./src/app/admin/admin-access-management/admin-access-management.component.html","./src/app/admin/admin-class-manager/admin-class-manager.component.ts","./src/app/admin/admin-class-manager/admin-class-manager.component.html","./src/app/admin/admin-groups/admin-groups.component.ts","./src/app/admin/admin-groups/admin-groups.component.html","./src/app/admin/admin-roles/admin-roles.component.ts","./src/app/admin/admin-roles/admin-roles.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin-settings/admin-settings.component.ts","./src/app/admin/admin-settings/admin-settings.component.html","./src/app/admin/admin-ticket-classes/admin-ticket-classes.component.ts","./src/app/admin/admin-ticket-classes/admin-ticket-classes.component.html","./src/app/admin/admin-users/admin-user-add/admin-user-add.component.ts","./src/app/admin/admin-users/admin-user-add/admin-user-add.component.html","./src/app/admin/admin-users/admin-user-edit/admin-user-edit.component.ts","./src/app/admin/admin-users/admin-user-edit/admin-user-edit.component.html","./src/app/admin/admin-users/admin-users.component.ts","./src/app/admin/admin-users/admin-users.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/components/admin-add-record/admin-add-record.component.ts","./src/app/admin/components/admin-add-record/admin-add-record.component.html","./src/app/admin/components/admin-edit-record/admin-edit-record.component.ts","./src/app/admin/components/admin-edit-record/admin-edit-record.component.html","./src/app/admin/components/admin-record-list/admin-record-list.component.ts","./src/app/admin/components/admin-record-list/admin-record-list.component.html","./src/app/loading/loading.module.ts","./src/app/loading/loading/loading.component.ts","./src/app/loading/loading/loading.component.html"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-access-management',\n  templateUrl: './admin-access-management.component.html',\n  styleUrls: ['./admin-access-management.component.scss']\n})\nexport class AdminAccessManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\" style=\"height: 100%;\">\n  <!-- <div class=\"alert alert-app-level\">\n      ...\n  </div> -->\n  <header class=\"header header-5\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">Access Management</span>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\">\n    <clr-vertical-nav>\n      <a clrVerticalNavLink routerLink=\"./users\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n          Users\n      </a>\n      <a clrVerticalNavLink routerLink=\"./groups\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"users\"></clr-icon>\n          Groups\n      </a>\n      <a clrVerticalNavLink routerLink=\"./roles\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"employee-group\"></clr-icon>\n          Roles\n      </a>\n    </clr-vertical-nav>\n    <div class=\"content-area\" style=\"padding: 0;\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-class-manager',\n  templateUrl: './admin-class-manager.component.html',\n  styleUrls: ['./admin-class-manager.component.scss']\n})\nexport class AdminClassManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-class-manager works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-groups',\n  templateUrl: './admin-groups.component.html',\n  styleUrls: ['./admin-groups.component.scss']\n})\nexport class AdminGroupsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-groups works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-roles',\n  templateUrl: './admin-roles.component.html',\n  styleUrls: ['./admin-roles.component.scss']\n})\nexport class AdminRolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-roles works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminComponent } from './admin.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { AdminGroupsComponent } from './admin-groups/admin-groups.component';\nimport { AdminAccessManagementComponent } from './admin-access-management/admin-access-management.component';\nimport { AdminRolesComponent } from './admin-roles/admin-roles.component';\nimport { AdminSettingsComponent } from './admin-settings/admin-settings.component';\nimport { AdminClassManagerComponent } from './admin-class-manager/admin-class-manager.component';\nimport { AdminRecordListComponent } from './components/admin-record-list/admin-record-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'users',\n      },\n      {\n        path: ':table',\n        component: AdminRecordListComponent\n      },\n      {\n        path: 'users',\n        component: AdminUsersComponent\n      },\n      {\n        path: 'groups',\n        component: AdminGroupsComponent\n      },\n      {\n        path: 'roles',\n        component: AdminRolesComponent\n      },\n      {\n        path: 'roles',\n        component: AdminRolesComponent\n      },\n      {\n        path: 'class-manager',\n        component: AdminClassManagerComponent\n      },\n      {\n        path: 'settings',\n        component: AdminSettingsComponent\n      },\n      {\n        path: 'access-management',\n        component: AdminAccessManagementComponent,\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'users'\n          },\n          {\n            path: 'users',\n            component: AdminUsersComponent\n          },\n          {\n            path: 'groups',\n            component: AdminGroupsComponent\n          },\n          {\n            path: 'roles',\n            component: AdminRolesComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-settings',\n  templateUrl: './admin-settings.component.html',\n  styleUrls: ['./admin-settings.component.scss']\n})\nexport class AdminSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-ticket-classes',\n  templateUrl: './admin-ticket-classes.component.html',\n  styleUrls: ['./admin-ticket-classes.component.scss']\n})\nexport class AdminTicketClassesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-ticket-classes works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-admin-user-add',\n  templateUrl: './admin-user-add.component.html',\n  styleUrls: ['./admin-user-add.component.scss']\n})\nexport class AdminUserAddComponent implements OnInit {\n\n  alert: boolean = false;\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(){\n\n  }\n\n  // onSave() {\n  //   this.dataService.createRecord('users', this.userRecord)\n  //     .then( res => {\n  //       console.log(res);\n  //     })\n  // }\n\n}\n","<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.first_name\" name=\"first_name\" placeholder=\"First Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.last_name\" name=\"last_name\" placeholder=\"Last Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput type=\"email\" [(ngModel)]=\"userRecord.email\" name=\"email\" placeholder=\"Email Address\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"userRecord.password\" name=\"passowrd\" placeholder=\"Password\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-user-edit',\n  templateUrl: './admin-user-edit.component.html',\n  styleUrls: ['./admin-user-edit.component.scss']\n})\nexport class AdminUserEditComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.first_name\" name=\"first_name\" placeholder=\"First Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.last_name\" name=\"last_name\" placeholder=\"Last Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput type=\"email\" [(ngModel)]=\"userRecord.email\" name=\"email\" placeholder=\"Email Address\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"userRecord.password\" name=\"passowrd\" placeholder=\"Password\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.scss']\n})\nexport class AdminUsersComponent implements OnInit {\n\n  users$: Observable<any>;\n  selected = null;\n  sideOpen: boolean = false;\n  addUser: boolean = false;\n  editUser: boolean = false;\n\n  detailState = null;\n\n  userRecord: any = {};\n  selectedUser: any = null;\n\n  alertSuccess = {\n    active: false,\n    message: 'test'\n  }\n\n  alertError = {\n    active: false,\n    message: 'test'\n  }\n\n  constructor(\n    private dataService: DataService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loadUsers();\n\n  }\n\n  loadUsers() {\n    this.users$ = this.dataService.records$('users', {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n  }\n\n\n  onAdd() {\n\n    this.addUser = true;\n    this.sideOpen = true;\n\n\n  }\n\n  onSave() {\n\n    this.userRecord.display_name = this.userRecord.first_name + ' ' + this.userRecord.last_name;\n\n    if(this.userRecord._id) {\n      this.dataService.updateRecord('users', this.userRecord._id, this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The changes to the user record have been saved to the database.'\n        \n\n        this.onClose();\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          this.userRecord = {};\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n    }\n    else {\n      this.dataService.createRecord('users', this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The user has been added to the database.'\n        \n\n        this.onClose();\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          this.userRecord = {};\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n    }\n\n  }\n\n  onClose() {\n    this.sideOpen = false;\n    this.addUser = false;\n    this.editUser = false;\n    this.selected = null;\n    this.userRecord = {};\n    // console.log(this.selectedUser);\n    //this.selectedUser = {};\n\n    setTimeout( () => {\n      this.alertSuccess.active = false;\n      this.alertError.active = false;\n    }, 3000);\n  }\n\n  onDelete() {\n\n    this.authService.logIn()\n      .then( res => {\n        this.userRecord.deleted_by = res.user._id;\n        this.userRecord.deleted_at = new Date();\n\n        let deleteThis = this.userRecord;\n\n        this.dataService.createRecord('deleted-records', deleteThis)\n          .then(res => {\n            this.onClose();\n            this.dataService.deleteRecord('users', deleteThis._id, {})\n              .then( res => {\n                this.alertSuccess.active = true;\n                this.alertSuccess.message = 'The user records was deleted from the database.';\n                //this.onClose();\n              })\n          })\n          .catch( err => {\n            this.alertError.active = true;\n            this.alertError.message = err;\n            //this.onClose();\n          })\n      })\n      .catch( err => {\n        this.alertError.active = true;\n        this.alertError.message = err;\n        //this.onClose();\n      })\n\n  }\n\n  selectionChanged() {\n    this.userRecord = this.selectedUser;\n    this.sideOpen = true;\n    this.editUser = true;\n  }\n\n  onEdit() {\n\n  }\n\n  onExportSelected() {}\n\n  onExportAll() {}\n\n}\n","<mat-sidenav-container class=\"main-container\" style=\"height: 100%;\">\n  <mat-sidenav position=\"end\" style=\"min-width: 60%;\" [opened]=\"sideOpen\">\n\n    <div class=\"main-container\" style=\"height: 100%;\">\n      <header class=\"header header-4\">\n        <div class=\"branding\">\n          <a routerLink=\"./\" class=\"nav-link\">\n              <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n              <span class=\"title\" *ngIf=\"addUser\">Add User</span>\n              <span class=\"title\" *ngIf=\"editUser\">{{ selectedUser.display_name }}</span>\n          </a>\n        </div>\n    \n        <div class=\"header-actions\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n      </header>\n      <div class=\"content-container\">\n        <div class=\"content-area\">\n          <app-admin-user-add *ngIf=\"addUser\" [userRecord]=\"userRecord\"></app-admin-user-add>\n          <app-admin-user-edit *ngIf=\"editUser\" [userRecord]=\"userRecord\"></app-admin-user-edit>\n        </div>\n      </div>\n    </div>\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n\n    <div class=\"alert alert-app-level alert-success\" role=\"alert\" *ngIf=\"alertSuccess.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertSuccess.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n\n    <div class=\"alert alert-app-level alert-danger\" role=\"alert\" *ngIf=\"alertError.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertError.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n  <header class=\"header header-4\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">Users</span>\n      </a>\n    </div>\n    <div class=\"header-nav\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" (click)=\"onAdd();\">\n        <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\" style=\"height: calc(100% - 60px);\">\n      <div class=\"content-area\" style=\"padding: 0 !important;\">\n        <div class=\"admin-data\" *ngIf=\"users$ | async as users\" style=\"height: 100%;\">\n          <clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\"\n          (clrDgSingleSelectedChange)=\"selectionChanged()\"\n            style=\"min-height: 100% !important; border: 0 !important;\">\n        \n            <!-- <clr-dg-action-bar style=\"margin-top: 0 !important;\">\n              <div class=\"btn-group\">\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add User</button>\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button>\n              </div>\n              <div class=\"btn-group\">\n                  <clr-dropdown>\n                      <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                          Export\n                          <clr-icon shape=\"caret down\"></clr-icon>\n                      </button>\n                      <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                          <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                          <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                      </clr-dropdown-menu>\n                  </clr-dropdown>\n              </div>\n            </clr-dg-action-bar> -->\n\n\n        \n            <clr-dg-column [clrDgField]=\"'display_name'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Display Name\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'email'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Email\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'created_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Created\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'updated_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Updated\n              </ng-container>\n            </clr-dg-column>\n          \n            <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\" [clrDgSelectable]=\"true\">\n              <clr-dg-cell>{{user.display_name}}</clr-dg-cell>\n              <clr-dg-cell>{{user.email}}</clr-dg-cell>\n              <clr-dg-cell>{{user.created_at | date}}</clr-dg-cell>\n              <clr-dg-cell>{{user.updated_at | date}}</clr-dg-cell>\n            </clr-dg-row>\n        \n        \n            <!-- Record Details -->\n\n            <clr-dg-footer>\n\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"30\">\n                <clr-dg-page-size [clrPageSizeOptions]=\"[30,50,100,200,500]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n                of {{pagination.totalItems}} users\n              </clr-dg-pagination>\n\n            </clr-dg-footer>\n          </clr-datagrid>\n        \n          <!-- Selected users: <span *ngFor=\"let user of selected\">{{user.name}}</span> -->\n        </div>\n      </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n    </div>\n\n  </mat-sidenav-content>\n\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  adminCollapse: boolean = true;\n  adminCollapsed: boolean = true;\n\n  navItems = [\n    {\n      path: './users',\n      icon: 'user',\n      name: 'Users'\n    },\n    {\n      path: './groups',\n      icon: 'users',\n      name: 'Groups'\n    },\n    {\n      path: './roles',\n      icon: 'employee-group',\n      name: 'Roles'\n    },\n    {\n      path: './ticket-classes',\n      icon: 'tree-view',\n      name: 'Class Manager'\n    },\n    {\n      path: './settings',\n      icon: 'cog',\n      name: 'Settings'\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\" style=\"height: 100%;\">\n  <!-- <nav class=\"subnav\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" href=\"#\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Tenants</a>\n        </li>\n    </ul>\n\t</nav> -->\n  <div class=\"content-container\">\n    <clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [clrVerticalNavCollapsed]=\"true\" class=\"nav-trigger--bottom\">\n      <a clrVerticalNavLink routerLink=\"{{ i.path }}\" routerLinkActive=\"active\" *ngFor=\"let i of navItems\">\n        <clr-icon clrVerticalNavIcon [attr.shape]=\"i.icon\"></clr-icon>\n        {{ i.name }}\n      </a>\n    </clr-vertical-nav>\n    <div class=\"content-area\" style=\"padding: 0;\">\n      <router-outlet></router-outlet>\n    </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { ClarityModule } from '@clr/angular';\nimport { MaterialUiModule } from '../material-ui/material-ui.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminAccessManagementComponent } from './admin-access-management/admin-access-management.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { AdminGroupsComponent } from './admin-groups/admin-groups.component';\nimport { AdminRolesComponent } from './admin-roles/admin-roles.component';\nimport { AdminUserAddComponent } from './admin-users/admin-user-add/admin-user-add.component';\nimport { AdminUserEditComponent } from './admin-users/admin-user-edit/admin-user-edit.component';\nimport { AdminSettingsComponent } from './admin-settings/admin-settings.component';\nimport { AdminTicketClassesComponent } from './admin-ticket-classes/admin-ticket-classes.component';\nimport { AdminClassManagerComponent } from './admin-class-manager/admin-class-manager.component';\nimport { AdminRecordListComponent } from './components/admin-record-list/admin-record-list.component';\nimport { LoadingModule } from '../loading/loading.module';\nimport { AdminAddRecordComponent } from './components/admin-add-record/admin-add-record.component';\nimport { AdminEditRecordComponent } from './components/admin-edit-record/admin-edit-record.component';\n\n\n\n@NgModule({\n  declarations: [AdminComponent, AdminAccessManagementComponent, AdminUsersComponent, AdminGroupsComponent, AdminRolesComponent, AdminUserAddComponent, AdminUserEditComponent, AdminSettingsComponent, AdminTicketClassesComponent, AdminClassManagerComponent, AdminRecordListComponent, AdminAddRecordComponent, AdminEditRecordComponent],\n  imports: [\n    CommonModule,\n    ClarityModule,\n    MaterialUiModule,\n    LoadingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Paginated } from '@feathersjs/feathers';\n\n@Component({\n  selector: 'app-admin-add-record',\n  templateUrl: './admin-add-record.component.html',\n  styleUrls: ['./admin-add-record.component.scss']\n})\nexport class AdminAddRecordComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n  form_view: any;\n\n  loading: boolean = false;\n\n  view: [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loading = true;\n\n    this.form_view = this.current_meta.form_views.add;\n\n    for ( var row in this.form_view.rows ) {\n      for ( var field in this.form_view.rows[row].fields ) {\n        if( this.form_view.rows[row].fields[field].reference ) {\n          this.populateReferenceOptions( this.form_view.rows[row].fields[field] )\n\n\n        }\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async populateReferenceOptions(field) {\n    this.dataService.records$(field.reference.service, field.reference.filter)\n      .subscribe( res => {\n        field.reference.optionList = res.data;\n\n        console.log(this.form_view)\n      });\n  }\n\n}\n\n// let service = this.form_view.rows[row].fields[field].reference.service;\n// let filter = this.form_view.rows[row].fields[field].reference.filter;\n\n// this.dataService.records$(service, filter)\n//   .subscribe( res => {\n//     console.log(this.form_view.rows[row].fields[field].reference)\n//     this.form_view.rows[row].fields[field].reference.optionList = res.data;\n//     console.log(this.form_view.rows[row].fields[field])\n//   });\n","<div class=\"add-record-loading\" *ngIf=\"loading\">\n  <app-loading></app-loading>\n</div>\n\n<div class=\"add-record-container\" *ngIf=\"!loading\">\n  <div class=\"clr-row\" *ngFor=\"let row of form_view.rows\">\n    <div class=\"clr-col\" *ngFor=\"let f of row.fields\">\n  \n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'single-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <input matInput [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\">\n          <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n          <!-- <mat-hint>Hint</mat-hint> -->\n        </mat-form-field>\n  \n        <!-- multi-line-text -->\n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'multi-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <textarea matInput rows=\"5\" [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\"></textarea>\n        </mat-form-field>\n        <!-- end multi-line-text -->\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-multi-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" multiple>\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-single-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\">\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-admin-edit-record',\n  templateUrl: './admin-edit-record.component.html',\n  styleUrls: ['./admin-edit-record.component.scss']\n})\nexport class AdminEditRecordComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n  form_view: any;\n\n  loading: boolean = false;\n\n  view: [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loading = true;\n\n    this.form_view = this.current_meta.form_views.add;\n\n    if(this.current_meta.form_views.edit) {\n      this.form_view = this.current_meta.form_views.edit;\n    }\n\n    for ( var row in this.form_view.rows ) {\n      for ( var field in this.form_view.rows[row].fields ) {\n        if( this.form_view.rows[row].fields[field].reference ) {\n          this.populateReferenceOptions( this.form_view.rows[row].fields[field] )\n\n\n        }\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async populateReferenceOptions(field) {\n    this.dataService.records$(field.reference.service, field.reference.filter)\n      .subscribe( res => {\n        field.reference.optionList = res.data;\n\n        console.log(this.form_view)\n      });\n  }\n}\n","<div class=\"add-record-loading\" *ngIf=\"loading\">\n  <app-loading></app-loading>\n</div>\n\n<div class=\"add-record-container\" *ngIf=\"!loading\">\n  <div class=\"clr-row\" *ngFor=\"let row of form_view.rows\">\n    <div class=\"clr-col\" *ngFor=\"let f of row.fields\">\n  \n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'single-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <input matInput [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\">\n          <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n          <!-- <mat-hint>Hint</mat-hint> -->\n        </mat-form-field>\n  \n        <!-- multi-line-text -->\n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'multi-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <textarea matInput rows=\"5\" [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\"></textarea>\n        </mat-form-field>\n        <!-- end multi-line-text -->\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-multi-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" multiple>\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-single-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\">\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, OnDestroy, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-record-list',\n  templateUrl: './admin-record-list.component.html',\n  styleUrls: ['./admin-record-list.component.scss'],\n})\nexport class AdminRecordListComponent implements OnInit, OnDestroy, OnChanges {\n\n  table: any = null;\n  table_display_name: any = null;\n\n  current_meta: any;\n\n  recs: any = [];\n\n  recordSub: Subscription;\n\n  loading: boolean = false;\n\n  records$: Observable<any> = null;\n  selected = null;\n  sideOpen: boolean = false;\n  addUser: boolean = false;\n  editUser: boolean = false;\n\n  detailState = null;\n\n  userRecord: any = {};\n  selectedUser: any = null;\n\n  alertSuccess = {\n    active: false,\n    message: 'test'\n  }\n\n  alertError = {\n    active: false,\n    message: 'test'\n  }\n\n  constructor(\n    private dataService: DataService,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function(){\n      return false;\n   }\n\n\n    //this.loadUsers();\n  }\n\n  ngOnDestroy(): void {\n    console.log('destroy!')\n    this.records$ = null;\n    this.records$ = null;\n    this.table = null;\n    this.current_meta = null;\n\n    this.recordSub.unsubscribe();\n  }\n\n  ngOnChanges(): void {\n    console.log('changes');\n  }\n\n  ngOnInit(): void {\n\n    this.records$ = null;\n    this.table = null;\n    this.current_meta = null;\n\n    this.loading = true;\n\n    this.activatedRoute.params\n      .subscribe( params => {\n        // this.initialiseState();\n        this.table = params.table;\n\n        this.table_display_name = this.tables[`${this.table}`].display_name;\n        this.current_meta = this.tables[`${this.table}`];\n\n        this.loadRecords();\n\n        \n      })\n\n  }\n\n\n  loadRecords() {\n    if(this.table == 'users') {\n      this.records$ = this.dataService.records$(this.table, {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data),\n\n      )\n    }\n    else {\n      this.records$ = this.dataService.records$(`api/admin/${this.table}`, {})\n        .pipe(\n          map(( r: Paginated<any>) => r.data)\n        )\n    }\n\n\n    this.recordSub = this.records$.subscribe( records => {\n      let lv = this.tables[this.table].list_view;\n      lv.cols.forEach( col => {\n        if( col.reference ) {\n          records.forEach( record => {\n            if(record[col.field]) {\n              this.dataService.record$(col.reference.service, record[col.field])\n              .subscribe( res => {\n                record[`${col.field}`] = res;\n\n                this.recs.push(record);\n\n                console.log(record);\n              }).remove();\n            } else {\n              this.recs.push(record);\n            }\n\n          })\n        }\n      })\n\n      console.log(records);\n      this.loading = false;\n      console.log(this.loading);\n    })\n  }\n\n\n  onAdd() {\n\n    this.addUser = true;\n    this.sideOpen = true;\n\n\n  }\n\n  onUpdate() {\n    this.dataService.updateRecord(this.current_meta.service, this.userRecord._id, this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The changes to the record have been saved to the database.'\n        \n\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          // this.userRecord = {};\n          this.sideOpen = false;\n          this.editUser = false;\n          this.onClose();\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n\n    console.log(this.userRecord);\n  }\n\n  onSave() {\n\n    this.dataService.createRecord(this.current_meta.service, this.userRecord)\n    .then( res => {\n      console.log('---- CREATE RES ----');\n      this.alertSuccess.active = true;\n      this.alertSuccess.message = 'The record has been added to the database.'\n      \n      console.log('---- CREATE END ----');\n\n      this.onClose();\n\n      setTimeout( () => {\n        this.alertSuccess.active = false;\n        this.alertSuccess.message = '';\n      }, 3000)\n    })\n    .catch( error => {\n      this.alertError.active = true;\n      this.alertError.message = error;\n    })\n\n  }\n\n  onClose() {\n    this.sideOpen = false;\n    this.addUser = false;\n    this.editUser = false;\n    this.selected = {};\n    this.selectedUser = null;\n    this.userRecord = {};\n    this.loading = false;\n    // console.log(this.selectedUser);\n    //this.selectedUser = {};\n\n    setTimeout( () => {\n      this.alertSuccess.active = false;\n      this.alertError.active = false;\n    }, 3000);\n  }\n\n  onDelete() {\n\n    this.authService.logIn()\n      .then( res => {\n        this.userRecord.deleted_by = res.user._id;\n        this.userRecord.deleted_at = new Date();\n\n        let deleteThis = this.userRecord;\n\n        this.dataService.createRecord('deleted-records', deleteThis)\n          .then(res => {\n            this.onClose();\n            this.dataService.deleteRecord('users', deleteThis._id, {})\n              .then( res => {\n                this.alertSuccess.active = true;\n                this.alertSuccess.message = 'The user records was deleted from the database.';\n                //this.onClose();\n              })\n          })\n          .catch( err => {\n            this.alertError.active = true;\n            this.alertError.message = err;\n            //this.onClose();\n          })\n      })\n      .catch( err => {\n        this.alertError.active = true;\n        this.alertError.message = err;\n        //this.onClose();\n      })\n\n  }\n\n  recordSelected(record) {\n    this.loading = true;\n    setTimeout( () => {\n      this.userRecord = record;\n      this.selectedUser = record;\n      this.sideOpen = true;\n      this.editUser = true;\n    }, 1000);\n  }\n\n  onEdit() {\n\n  }\n\n  onExportSelected() {}\n\n  onExportAll() {}\n\n\n  tables = {\n    users: {\n      display_name: 'Users',\n      singular_name: 'User',\n      icon: 'user',\n      service: 'users',\n      list_view: {\n        cols: [\n          {\n            name: 'Display Name',\n            field: 'display_name'\n          },\n          {\n            name: 'First Name',\n            field: 'first_name'\n          },\n          {\n            name: 'Last Name',\n            field: 'last_name'\n          },\n          {\n            name: 'Email Address',\n            field: 'email'\n          }\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Display Name',\n                  field: 'display_name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'First Name',\n                  field: 'first_name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Last Name',\n                  field: 'last_name',\n                  type: 'single-line-text'\n                },\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Groups',\n                  field: 'groups',\n                  type: 'reference-multi-select',\n                  reference: {\n                    service: 'api/admin/groups',\n                    display_field: 'name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Roles',\n                  field: 'roles',\n                  type: 'reference-multi-select',\n                  reference: {\n                    service: 'api/admin/roles',\n                    display_field: 'name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Password',\n                  field: 'password',\n                  type: 'single-line-text'\n                },\n              ]\n            }\n          ]\n        },\n        edit: {\n          mafin_section: {\n            rows: [\n              {\n                fields: [\n                  {\n                    name: 'Display Namde',\n                    field: 'display_name',\n                    type: 'single-line-text'\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'First Name',\n                    field: 'first_name',\n                    type: 'single-line-text'\n                  },\n                  {\n                    name: 'Last Name',\n                    field: 'last_name',\n                    type: 'single-line-text'\n                  },\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Email Address',\n                    field: 'email',\n                    type: 'single-line-text'\n                  },\n                  {\n                    name: 'Manager',\n                    field: 'manager',\n                    type: 'reference-single-select',\n                    reference: {\n                      service: 'users',\n                      display_field: 'display_name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Groups',\n                    field: 'groups',\n                    type: 'reference-multi-select',\n                    reference: {\n                      service: 'api/admin/groups',\n                      display_field: 'name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Roles',\n                    field: 'roles',\n                    type: 'reference-multi-select',\n                    reference: {\n                      service: 'api/admin/roles',\n                      display_field: 'name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Password',\n                    field: 'password',\n                    type: 'single-line-text'\n                  },\n                ]\n              }\n            ]\n\n          },\n          other_section: {\n\n          },\n          related_section: [\n            {\n              name: \"Groups\",\n              service: \"api/admin/groups\"\n            }\n          ],\n          actions_section: {\n\n          },\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Display Name',\n                  field: 'display_name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'First Name',\n                  field: 'first_name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Last Name',\n                  field: 'last_name',\n                  type: 'single-line-text'\n                },\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Password',\n                  field: 'password',\n                  type: 'single-line-text'\n                },\n              ]\n            }\n          ]\n        }\n      }\n    },\n    groups: {\n      display_name: 'Groups',\n      singular_name: 'Group',\n      icon: 'users',\n      service: 'api/admin/groups',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: 'name',\n          },\n          {\n            name: 'Manager',\n            field: 'manager',\n            reference: {\n              service: 'users',\n              display_field: 'display_name',\n              filter: null\n            }\n          },\n          {\n            name: 'Email Address',\n            field: 'email_address'\n          },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: 'name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email_address',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Notes',\n                  field: 'notes',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    roles: {\n      display_name: 'Roles',\n      singular_name: 'Role',\n      icon: 'employee-group',\n      service: 'api/admin/roles',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: 'name',\n          },\n          // {\n          //   name: 'Manager',\n          //   field: 'manager',\n          //   reference: {\n          //     service: 'users',\n          //     display_field: 'display_name',\n          //     filter: null\n          //   }\n          // },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: 'name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Notes',\n                  field: 'notes',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    settings: {\n      display_name: 'Settings',\n      singular_name: 'settings',\n      icon: 'users',\n      service: 'api/admin/settings',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: '_id',\n          },\n          {\n            name: 'Value',\n            field: 'value',\n          },\n          {\n            name: 'Description',\n            field: 'description',\n          },\n          // {\n          //   name: 'Manager',\n          //   field: 'manager',\n          //   reference: {\n          //     service: 'users',\n          //     display_field: 'display_name',\n          //     filter: null\n          //   }\n          // },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: '_id',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Value',\n                  field: 'value',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Description',\n                  field: 'description',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n  }\n\n}\n","<mat-sidenav-container class=\"main-container\" style=\"height: 100%;\">\n  <mat-sidenav position=\"end\" style=\"min-width: 100%;\" [opened]=\"sideOpen\">\n\n    <div class=\"main-container\" style=\"height: 100%;\">\n      <header class=\"header header-4\">\n        <div class=\"branding\">\n          <a routerLink=\"./\" class=\"nav-link\">\n              <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n              <span class=\"title\" *ngIf=\"addUser\">Add {{ current_meta.singular_name }}</span>\n              <span class=\"title\" *ngIf=\"editUser && selectedUser\">{{ selectedUser.display_name }}</span>\n          </a>\n        </div>\n    \n        <div class=\"header-actions\" *ngIf=\"addUser\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n\n        <div class=\"header-actions\" *ngIf=\"editUser\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onUpdate();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n      </header>\n      <div class=\"content-container\">\n        <div class=\"content-area\">\n          <!-- <app-add-record *ngIf=\"addUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-user-add>\n          <app-admin-user-edit *ngIf=\"editUser\" [userRecord]=\"userRecord\"></app-admin-user-edit> -->\n          <app-admin-add-record *ngIf=\"addUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-add-record>\n          <!-- <app-admin-add-record *ngIf=\"editUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-add-record> -->\n          <app-admin-edit-record *ngIf=\"editUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-edit-record>\n        </div>\n      </div>\n    </div>\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n\n    <div class=\"alert alert-app-level alert-success\" role=\"alert\" *ngIf=\"alertSuccess.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertSuccess.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n\n    <div class=\"alert alert-app-level alert-danger\" role=\"alert\" *ngIf=\"alertError.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertError.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n  <header class=\"header header-4\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">{{ table_display_name }}</span>\n      </a>\n    </div>\n    <div class=\"header-nav\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" (click)=\"onAdd();\" *ngIf=\"table != 'settings'\">\n        <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n    <div class=\"flex-header-container\">\n      <div class=\"box-container box-container-highlight\">\n        <clr-icon shape=\"search\"></clr-icon>\n        <input autocomplete=\"off\" name=\"list-filter\" placeholder=\"Search...\" type=\"text\" />\n      </div>\n    </div>\n\n    <div class=\"header-actions\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n          <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n      </a>\n      <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n        <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n      </a>\n      <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n        <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\" style=\"height: calc(100% - 60px);\">\n      <div class=\"content-area\" style=\"text-align: center; margin-top: 200px;\" *ngIf=\"loading\">\n        <app-loading></app-loading>\n      </div>\n      <div class=\"content-area\" style=\"padding: 0 !important;\" *ngIf=\"!loading\">\n        <div class=\"admin-data\" *ngIf=\"records$ | async as records\" style=\"height: 100%;\">\n          <clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\"\n            style=\"min-height: 100% !important; border: 0 !important;\">\n        \n        \n            <clr-dg-column [clrDgField]=\"col.field\" *ngFor=\"let col of current_meta.list_view.cols\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                <span>\n                  {{ col.name }}\n                </span>\n              </ng-container>\n            </clr-dg-column>\n\n\n            <!-- <clr-dg-column [clrDgField]=\"'updated_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                Created\n              </ng-container>\n            </clr-dg-column>\n\n            <clr-dg-column [clrDgField]=\"'created_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                Updated\n              </ng-container>\n            </clr-dg-column> -->\n\n          \n            <clr-dg-row *clrDgItems=\"let r of records\" (click)=\"recordSelected(r)\" [clrDgItem]=\"r\" [clrDgSelectable]=\"true\">\n              <clr-dg-cell *ngFor=\"let coll of current_meta.list_view.cols\">\n                <span *ngIf=\"!coll.reference\">\n                  {{r[coll.field]}}\n                </span>\n\n                <span *ngIf=\"coll.reference\">\n                  {{r[coll.field][coll.reference.display_field]}}\n                </span>\n              </clr-dg-cell>\n              <!-- <clr-dg-cell>{{r.created_at | date}}</clr-dg-cell>\n              <clr-dg-cell>{{r.updated_at | date}}</clr-dg-cell> -->\n            </clr-dg-row>\n        \n        \n            <!-- Record Details -->\n\n            <clr-dg-footer>\n\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"30\">\n                <clr-dg-page-size [clrPageSizeOptions]=\"[30,50,100,200,500]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n                of {{pagination.totalItems}} users\n              </clr-dg-pagination>\n\n            </clr-dg-footer>\n          </clr-datagrid>\n        \n          <!-- Selected users: <span *ngFor=\"let user of selected\">{{user.name}}</span> -->\n        </div>\n      </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n    </div>\n\n  </mat-sidenav-content>\n\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './loading/loading.component';\n\n\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LoadingComponent\n  ]\n})\nexport class LoadingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span class=\"spinner\">\n  Loading...\n</span>"],"sourceRoot":"webpack:///"}