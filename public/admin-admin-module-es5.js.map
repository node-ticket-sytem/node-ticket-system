{"version":3,"sources":["webpack:///src/app/admin/admin-access-management/admin-access-management.component.ts","webpack:///src/app/admin/admin-access-management/admin-access-management.component.html","webpack:///src/app/admin/admin-class-manager/admin-class-manager.component.ts","webpack:///src/app/admin/admin-class-manager/admin-class-manager.component.html","webpack:///src/app/admin/admin-groups/admin-groups.component.ts","webpack:///src/app/admin/admin-groups/admin-groups.component.html","webpack:///src/app/admin/admin-roles/admin-roles.component.ts","webpack:///src/app/admin/admin-roles/admin-roles.component.html","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin-settings/admin-settings.component.ts","webpack:///src/app/admin/admin-settings/admin-settings.component.html","webpack:///src/app/admin/admin-ticket-classes/admin-ticket-classes.component.ts","webpack:///src/app/admin/admin-ticket-classes/admin-ticket-classes.component.html","webpack:///src/app/admin/admin-users/admin-user-add/admin-user-add.component.ts","webpack:///src/app/admin/admin-users/admin-user-add/admin-user-add.component.html","webpack:///src/app/admin/admin-users/admin-user-edit/admin-user-edit.component.ts","webpack:///src/app/admin/admin-users/admin-user-edit/admin-user-edit.component.html","webpack:///src/app/admin/admin-users/admin-users.component.ts","webpack:///src/app/admin/admin-users/admin-users.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/components/admin-add-record/admin-add-record.component.html","webpack:///src/app/admin/components/admin-add-record/admin-add-record.component.ts","webpack:///src/app/admin/components/admin-edit-record/admin-edit-record.component.html","webpack:///src/app/admin/components/admin-edit-record/admin-edit-record.component.ts","webpack:///src/app/admin/components/admin-record-list/admin-record-list.component.ts","webpack:///src/app/admin/components/admin-record-list/admin-record-list.component.html","webpack:///src/app/loading/loading.module.ts","webpack:///src/app/loading/loading/loading.component.ts","webpack:///src/app/loading/loading/loading.component.html"],"names":["AdminAccessManagementComponent","selector","templateUrl","styleUrls","AdminClassManagerComponent","AdminGroupsComponent","AdminRolesComponent","routes","path","component","children","pathMatch","redirectTo","AdminRoutingModule","forChild","imports","exports","AdminSettingsComponent","AdminTicketClassesComponent","AdminUserAddComponent","dataService","alert","AdminUserEditComponent","AdminUsersComponent","authService","selected","sideOpen","addUser","editUser","detailState","userRecord","selectedUser","alertSuccess","active","message","alertError","loadUsers","users$","records$","pipe","r","data","display_name","first_name","last_name","_id","updateRecord","then","res","onClose","setTimeout","error","createRecord","logIn","deleted_by","user","deleted_at","Date","deleteThis","deleteRecord","err","onSave","onAdd","AdminComponent","adminCollapse","adminCollapsed","navItems","icon","name","AdminModule","declarations","AdminAddRecordComponent","toppingList","loading","form_view","current_meta","form_views","add","row","rows","field","fields","reference","populateReferenceOptions","service","filter","subscribe","optionList","console","log","AdminEditRecordComponent","edit","AdminRecordListComponent","activatedRoute","router","table","table_display_name","recs","tables","users","singular_name","list_view","cols","type","display_field","mafin_section","other_section","related_section","actions_section","groups","roles","settings","routeReuseStrategy","shouldReuseRoute","recordSub","unsubscribe","params","loadRecords","records","lv","forEach","col","record","record$","push","remove","LoadingModule","LoadingComponent"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaA,8B;AAEX,gDAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,8B;AAA8B,K;;;YAA9BA,8B;AAA8B,kD;AAAA,e;AAAA,a;AAAA,umB;AAAA;AAAA;ACP3C;;AAIE;;AACE;;AACE;;AAEI;;AAAoB;;AAAiB;;AACzC;;AACF;;AACF;;AAIA;;AACE;;AACE;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACA;;AACI;;AACA;;AACJ;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;;;;sED3BaA,8B,EAA8B;cAL1C,uDAK0C;eALhC;AACTC,kBAAQ,EAAE,6BADD;AAETC,qBAAW,EAAE,0CAFJ;AAGTC,mBAAS,EAAE,CAAC,0CAAD;AAHF,S;AAKgC,Q;;;;;;;;;;;;;;;;;;;;AEP3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,0B;AAEX,4CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,0B;AAA0B,K;;;YAA1BA,0B;AAA0B,8C;AAAA,c;AAAA,a;AAAA;AAAA;ACPvC;;AAAG;;AAA0B;;;;;;;;sEDOhBA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTH,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;AEPvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,oB;AAEX,sCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA;AAAA;ACPjC;;AAAG;;AAAmB;;;;;;;;sEDOTA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTJ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaG,mB;AAEX,qCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,c;AAAA,a;AAAA;AAAA;ACPhC;;AAAG;;AAAkB;;;;;;;;sEDORA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTL,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,QAAMI,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,+DAFb;AAGEC,cAAQ,EAAE,CACR;AACEF,YAAI,EAAE,EADR;AAEEG,iBAAS,EAAE,MAFb;AAGEC,kBAAU,EAAE;AAHd,OADQ,EAMR;AACEJ,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAE;AAFb,OANQ,EAUR;AACED,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAE;AAFb,OAVQ,EAcR;AACED,YAAI,EAAE,QADR;AAEEC,iBAAS,EAAE;AAFb,OAdQ,EAkBR;AACED,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAE;AAFb,OAlBQ,EAsBR;AACED,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAE;AAFb,OAtBQ,EA0BR;AACED,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE;AAFb,OA1BQ,EA8BR;AACED,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OA9BQ,EAkCR;AACED,YAAI,EAAE,mBADR;AAEEC,iBAAS,EAAE,yHAFb;AAGEC,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,EADR;AAEEG,mBAAS,EAAE,MAFb;AAGEC,oBAAU,EAAE;AAHd,SADQ,EAMR;AACEJ,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE;AAFb,SANQ,EAUR;AACED,cAAI,EAAE,QADR;AAEEC,mBAAS,EAAE;AAFb,SAVQ,EAcR;AACED,cAAI,EAAE,OADR;AAEEC,mBAAS,EAAE;AAFb,SAdQ;AAHZ,OAlCQ;AAHZ,KADqB,CAAvB;;QAqEaI,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAHpB,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;0HAAlBM,kB,EAAkB;AAAA;AAAA,kBAFnB,4DAEmB;AAAA,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAJ9B,sDAI8B;eAJrB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERS,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIqB,Q;;;;;;;;;;;;;;;;;;ACjF/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA;AAAA;ACPnC;;AAAG;;AAAqB;;;;;;;;sEDOXA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACThB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,2B;AAEX,6CAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,2B;AAA2B,K;;;YAA3BA,2B;AAA2B,+C;AAAA,c;AAAA,a;AAAA;AAAA;ACPxC;;AAAG;;AAA2B;;;;;;;;sEDOjBA,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTjB,kBAAQ,EAAE,0BADD;AAETC,qBAAW,EAAE,uCAFJ;AAGTC,mBAAS,EAAE,CAAC,uCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;AEPxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagB,qB;AAOX,qCACUC,WADV,EACkC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AANV,aAAAC,KAAA,GAAiB,KAAjB;AAOK;;;;mCAEG,CACP;;;mCAEO,CAEP;;;;;;;uBAhBUF,qB,EAAqB,0I;AAAA,K;;;YAArBA,qB;AAAqB,yC;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,kgB;AAAA;AAAA;ACRlC;;AACE;;AAEI;;AACE;;AAAW;;AAAU;;AACrB;;AAAgB;AAAA;AAAA;;AAAhB;;AAGF;;AAEJ;;AAEA;;AAEI;;AACE;;AAAW;;AAAS;;AACpB;;AAAgB;AAAA;AAAA;;AAAhB;;AAGF;;AAEJ;;AACF;;AAEA;;AACE;;AAEI;;AACE;;AAAW;;AAAa;;AACxB;;AAA6B;AAAA;AAAA;;AAA7B;;AAGF;;AAEJ;;AACF;;AAEA;;AACE;;AAEI;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgC;AAAA;AAAA;;AAAhC;;AAGF;;AAEJ;;AACF;;;;AA3CwB;;AAAA;;AAWA;;AAAA;;AAaa;;AAAA;;AAaG;;AAAA;;;;;;;;;sEDlC3BA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTlB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKuB,Q;;;;;;gBAI/B,mD;iBAAM,Y;;;gBACN,mD;iBAAM,c;;;;;;;;;;;;;;;;;;;;AEbT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamB,sB;AAIX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAPUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,kgB;AAAA;AAAA;ACPnC;;AACE;;AAEI;;AACE;;AAAW;;AAAU;;AACrB;;AAAgB;AAAA;AAAA;;AAAhB;;AAGF;;AAEJ;;AAEA;;AAEI;;AACE;;AAAW;;AAAS;;AACpB;;AAAgB;AAAA;AAAA;;AAAhB;;AAGF;;AAEJ;;AACF;;AAEA;;AACE;;AAEI;;AACE;;AAAW;;AAAa;;AACxB;;AAA6B;AAAA;AAAA;;AAA7B;;AAGF;;AAEJ;;AACF;;AAEA;;AACE;;AAEI;;AACE;;AAAW;;AAAQ;;AACnB;;AAAgC;AAAA;AAAA;;AAAhC;;AAGF;;AAEJ;;AACF;;;;AA3CwB;;AAAA;;AAWA;;AAAA;;AAaa;;AAAA;;AAaG;;AAAA;;;;;;;;;sEDnC3BA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTrB,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKwB,Q;;;;gBAEhC,mD;iBAAM,Y;;;;;;;;;;;;;;;;;;;;AETT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQc;;AAAoC;;AAAQ;;;;;;AAC5C;;AAAqC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;;;AAQzC;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;;;;;AAQA;;;;;;AAAoC;;;;;;AACpC;;;;;;AAAsC;;;;;;AAQ5C;;AACE;;AACI;;AACI;;AACE;;AACF;;AACA;;AACI;;AACJ;;AAIJ;;AACJ;;AAIF;;;;;;AAVc;;AAAA;;;;;;AAYd;;AACE;;AACI;;AACI;;AACE;;AACF;;AACA;;AACI;;AACJ;;AAIJ;;AACJ;;AAIF;;;;;;AAVc;;AAAA;;;;;;AAyDJ;;AACE;;AACF;;;;;;AAGA;;AACE;;AACF;;;;;;AAGA;;AACE;;AACF;;;;;;AAGA;;AACE;;AACF;;;;;;AAGF;;AACE;;AAAa;;AAAqB;;AAClC;;AAAa;;AAAc;;AAC3B;;AAAa;;;;AAA0B;;AACvC;;AAAa;;;;AAA0B;;AACzC;;;;;;AAL4C,wFAAkB,iBAAlB,EAAkB,IAAlB;;AAC7B;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;;;;;AApDnB;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA,WAAsC,2BAAtC,EAAsC;AAAA;;AAAA;;AAAA;AAAA,SAAtC;;AA0BZ;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AAEA;;AAUA;;AAEE;;AACE;;AAA6D;;AAAc;;AAC3E;;AAEF;;AAEF;;AACF;;AAGF;;;;;;;;;;AArEgB;;AAAA,6GAAsC,mBAAtC,EAAsC,IAAtC;;AA0BG;;AAAA;;AACC;;AAAA;;AAID;;AAAA;;AACC;;AAAA;;AAID;;AAAA;;AACC;;AAAA;;AAID;;AAAA;;AACC;;AAAA;;AAKJ;;AAAA;;AAYqB;;AAAA;;AACX;;AAAA;;AAClB;;AAAA;;;;QD7IHoB,mB;AAuBX,mCACUH,WADV,EAEUI,WAFV,EAEkC;AAAA;;AADxB,aAAAJ,WAAA,GAAAA,WAAA;AACA,aAAAI,WAAA,GAAAA,WAAA;AAtBV,aAAAC,QAAA,GAAW,IAAX;AACA,aAAAC,QAAA,GAAoB,KAApB;AACA,aAAAC,OAAA,GAAmB,KAAnB;AACA,aAAAC,QAAA,GAAoB,KAApB;AAEA,aAAAC,WAAA,GAAc,IAAd;AAEA,aAAAC,UAAA,GAAkB,EAAlB;AACA,aAAAC,YAAA,GAAoB,IAApB;AAEA,aAAAC,YAAA,GAAe;AACbC,gBAAM,EAAE,KADK;AAEbC,iBAAO,EAAE;AAFI,SAAf;AAKA,aAAAC,UAAA,GAAa;AACXF,gBAAM,EAAE,KADG;AAEXC,iBAAO,EAAE;AAFE,SAAb;AAQK;;;;mCAEG;AAEN,eAAKE,SAAL;AAED;;;oCAEW;AACV,eAAKC,MAAL,GAAc,KAAKjB,WAAL,CAAiBkB,QAAjB,CAA0B,OAA1B,EAAmC,EAAnC,EACXC,IADW,CAEV,2DAAI,UAAEC,CAAF;AAAA,mBAAwBA,CAAC,CAACC,IAA1B;AAAA,WAAJ,CAFU,CAAd;AAID;;;gCAGO;AAEN,eAAKd,OAAL,GAAe,IAAf;AACA,eAAKD,QAAL,GAAgB,IAAhB;AAGD;;;iCAEQ;AAAA;;AAEP,eAAKI,UAAL,CAAgBY,YAAhB,GAA+B,KAAKZ,UAAL,CAAgBa,UAAhB,GAA6B,GAA7B,GAAmC,KAAKb,UAAL,CAAgBc,SAAlF;;AAEA,cAAG,KAAKd,UAAL,CAAgBe,GAAnB,EAAwB;AACtB,iBAAKzB,WAAL,CAAiB0B,YAAjB,CAA8B,OAA9B,EAAuC,KAAKhB,UAAL,CAAgBe,GAAvD,EAA4D,KAAKf,UAAjE,EACCiB,IADD,CACO,UAAAC,GAAG,EAAI;AACZ,mBAAI,CAAChB,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,mBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,iEAA5B;;AAGA,mBAAI,CAACe,OAAL;;AAEAC,wBAAU,CAAE,YAAM;AAChB,qBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,qBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,EAA5B;AACA,qBAAI,CAACJ,UAAL,GAAkB,EAAlB;AACD,eAJS,EAIP,IAJO,CAAV;AAKD,aAbD,WAcQ,UAAAqB,KAAK,EAAI;AACf,mBAAI,CAAChB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,mBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0BiB,KAA1B;AACD,aAjBD;AAkBD,WAnBD,MAoBK;AACH,iBAAK/B,WAAL,CAAiBgC,YAAjB,CAA8B,OAA9B,EAAuC,KAAKtB,UAA5C,EACCiB,IADD,CACO,UAAAC,GAAG,EAAI;AACZ,mBAAI,CAAChB,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,mBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,0CAA5B;;AAGA,mBAAI,CAACe,OAAL;;AAEAC,wBAAU,CAAE,YAAM;AAChB,qBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,qBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,EAA5B;AACA,qBAAI,CAACJ,UAAL,GAAkB,EAAlB;AACD,eAJS,EAIP,IAJO,CAAV;AAKD,aAbD,WAcQ,UAAAqB,KAAK,EAAI;AACf,mBAAI,CAAChB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,mBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0BiB,KAA1B;AACD,aAjBD;AAkBD;AAEF;;;kCAES;AAAA;;AACR,eAAKzB,QAAL,GAAgB,KAAhB;AACA,eAAKC,OAAL,GAAe,KAAf;AACA,eAAKC,QAAL,GAAgB,KAAhB;AACA,eAAKH,QAAL,GAAgB,IAAhB;AACA,eAAKK,UAAL,GAAkB,EAAlB,CALQ,CAMR;AACA;;AAEAoB,oBAAU,CAAE,YAAM;AAChB,kBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,kBAAI,CAACE,UAAL,CAAgBF,MAAhB,GAAyB,KAAzB;AACD,WAHS,EAGP,IAHO,CAAV;AAID;;;mCAEU;AAAA;;AAET,eAAKT,WAAL,CAAiB6B,KAAjB,GACGN,IADH,CACS,UAAAC,GAAG,EAAI;AACZ,kBAAI,CAAClB,UAAL,CAAgBwB,UAAhB,GAA6BN,GAAG,CAACO,IAAJ,CAASV,GAAtC;AACA,kBAAI,CAACf,UAAL,CAAgB0B,UAAhB,GAA6B,IAAIC,IAAJ,EAA7B;AAEA,gBAAIC,UAAU,GAAG,MAAI,CAAC5B,UAAtB;;AAEA,kBAAI,CAACV,WAAL,CAAiBgC,YAAjB,CAA8B,iBAA9B,EAAiDM,UAAjD,EACGX,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,oBAAI,CAACC,OAAL;;AACA,oBAAI,CAAC7B,WAAL,CAAiBuC,YAAjB,CAA8B,OAA9B,EAAuCD,UAAU,CAACb,GAAlD,EAAuD,EAAvD,EACGE,IADH,CACS,UAAAC,GAAG,EAAI;AACZ,sBAAI,CAAChB,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,sBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,iDAA5B,CAFY,CAGZ;AACD,eALH;AAMD,aATH,WAUU,UAAA0B,GAAG,EAAI;AACb,oBAAI,CAACzB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,oBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0B0B,GAA1B,CAFa,CAGb;AACD,aAdH;AAeD,WAtBH,WAuBU,UAAAA,GAAG,EAAI;AACb,kBAAI,CAACzB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,kBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0B0B,GAA1B,CAFa,CAGb;AACD,WA3BH;AA6BD;;;2CAEkB;AACjB,eAAK9B,UAAL,GAAkB,KAAKC,YAAvB;AACA,eAAKL,QAAL,GAAgB,IAAhB;AACA,eAAKE,QAAL,GAAgB,IAAhB;AACD;;;iCAEQ,CAER;;;2CAEkB,CAAE;;;sCAEP,CAAE;;;;;;;uBA7JLL,mB,EAAmB,0I,EAAA,0I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,o3D;AAAA;AAAA;ACZhC;;AACE;;AAEE;;AACE;;AACE;;AACE;;AAEI;;AACA;;AACJ;;AACF;;AAEA;;AACE;;AAA0E;AAAA,mBAAS,IAAAsC,MAAA,EAAT;AAAiB,WAAjB;;AACtE;;AACJ;;AACA;;AAGA;;AAA6E;AAAA,mBAAS,IAAAZ,OAAA,EAAT;AAAkB,WAAlB;;AAC3E;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACF;;AACF;;AACF;;AAEF;;AACA;;AAEE;;AAmBA;;AAkBF;;AACE;;AACE;;AAEI;;AAAoB;;AAAK;;AAC7B;;AACF;;AACA;;AACE;;AAAwD;AAAA,mBAAS,IAAAa,KAAA,EAAT;AAAgB,WAAhB;;AACtD;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACE;;;;AAuEF;;AAIF;;AAEF;;AAEF;;;;AAzKsD;;AAAA;;AAOpB;;AAAA;;AACA;;AAAA;;AAQ2E;;AAAA;;AAU/E;;AAAA;;AACC;;AAAA;;AAQmC;;AAAA;;AAmBD;;AAAA;;AAoCjC;;AAAA;;;;;;;;;;sED/EnBvC,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtB,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBM;;AACE;;AACA;;AACF;;;;;;AAHsB;;AACS;;AAAA;;AAC7B;;AAAA;;;;QDdK4D,c;AAiCX,gCAAc;AAAA;;AA/Bd,aAAAC,aAAA,GAAyB,IAAzB;AACA,aAAAC,cAAA,GAA0B,IAA1B;AAEA,aAAAC,QAAA,GAAW,CACT;AACE1D,cAAI,EAAE,SADR;AAEE2D,cAAI,EAAE,MAFR;AAGEC,cAAI,EAAE;AAHR,SADS,EAMT;AACE5D,cAAI,EAAE,UADR;AAEE2D,cAAI,EAAE,OAFR;AAGEC,cAAI,EAAE;AAHR,SANS,EAWT;AACE5D,cAAI,EAAE,SADR;AAEE2D,cAAI,EAAE,gBAFR;AAGEC,cAAI,EAAE;AAHR,SAXS,EAgBT;AACE5D,cAAI,EAAE,kBADR;AAEE2D,cAAI,EAAE,WAFR;AAGEC,cAAI,EAAE;AAHR,SAhBS,EAqBT;AACE5D,cAAI,EAAE,YADR;AAEE2D,cAAI,EAAE,KAFR;AAGEC,cAAI,EAAE;AAHR,SArBS,CAAX;AA4BiB;;;;mCAET,CACP;;;;;;;uBApCUL,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,4Z;AAAA;AAAA;ACP3B;;AAiBE;;AACE;;AACE;;AAIF;;AACA;;AACE;;AACF;;AAIF;;AACF;;;;AAbsB;;AAAA,sGAAkC,yBAAlC,EAAkC,IAAlC;;AAC0D;;AAAA;;;;;;;;;sEDZnEA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT9D,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoCakE,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAVb,CACP,4DADO,EAEP,0DAFO,EAGP,gFAHO,EAIP,sEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,wEAPO,CAUa;;;;0HAAXA,W,EAAW;AAAA,uBAXP,+DAWO,EAXS,yHAWT,EAXyC,sFAWzC,EAX8D,yFAW9D,EAXoF,uFAWpF,EAXyG,2GAWzG,EAXgI,8GAWhI,EAXwJ,gGAWxJ,EAXgL,iHAWhL,EAX6M,8GAW7M,EAXyO,mHAWzO,EAXmQ,gHAWnQ,EAX4R,mHAW5R;AAXoT,kBAExU,4DAFwU,EAGxU,0DAHwU,EAIxU,gFAJwU,EAKxU,sEALwU,EAMxU,0DANwU,EAOxU,kEAPwU,EAQxU,wEARwU;AAWpT,O;AAHF,K;;;;;sEAGTA,W,EAAW;cAZvB,sDAYuB;eAZd;AACRC,sBAAY,EAAE,CAAC,+DAAD,EAAiB,yHAAjB,EAAiD,sFAAjD,EAAsE,yFAAtE,EAA4F,uFAA5F,EAAiH,2GAAjH,EAAwI,8GAAxI,EAAgK,gGAAhK,EAAwL,iHAAxL,EAAqN,8GAArN,EAAiP,mHAAjP,EAA2Q,gHAA3Q,EAAoS,mHAApS,CADN;AAERvD,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,gFAHO,EAIP,sEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,wEAPO;AAFD,S;AAYc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCxB;;AACE;;AACF;;;;;;;;AAMQ;;AACE;;AAAW;;AAAY;;AACvB;;AAAgB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AAGF;;;;;;;;AAJa;;AAAA;;AACuC;;AAAA;;AAAqB;;AAAvD;;;;;;;;AAMlB;;AACE;;AAAW;;AAAY;;AACvB;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkF;;AAChH;;;;;;;;AAFa;;AAAA;;AACmD;;AAAA;;AAAqB;;AAAvD;;;;;;AAa1B;;AAA+E;;AAAuC;;;;;;;;AAA5D;;AAAqB;;AAAA;;;;;;;;AATnF;;AACE;;AAAW;;AAAY;;AACvB;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAOV;;AACF;;AACF;;;;;;;;AAVa;;AAAA;;AACmC;;AAAA;;AAAlC;;AAOE;;AAAA;;;;;;AAaZ;;AAA+E;;AAAuC;;;;;;;;AAA5D;;AAAqB;;AAAA;;;;;;;;AATnF;;AACE;;AAAW;;AAAY;;AACvB;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAOV;;AACF;;AACF;;;;;;;;AAVa;;AAAA;;AACmC;;AAAA;;AAAlC;;AAOE;;AAAA;;;;;;AAtCpB;;AAEI;;AAQA;;AAMA;;AAaA;;AAYJ;;;;;;AAvCuD;;AAAA;;AAQA;;AAAA;;AAMA;;AAAA;;AAaA;;AAAA;;;;;;AA9BzD;;AACE;;AA0CF;;;;;;AA1CuB;;AAAA;;;;;;AAFzB;;AACE;;AA4CF;;;;;;AA5CuB;;AAAA;;;;QCIVwD,uB;AAaX,uCACUnD,WADV,EACkC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AATV,aAAAoD,WAAA,GAAwB,CAAC,cAAD,EAAiB,UAAjB,EAA6B,OAA7B,EAAsC,WAAtC,EAAmD,SAAnD,EAA8D,QAA9D,CAAxB;AAIA,aAAAC,OAAA,GAAmB,KAAnB;AAMK;;;;mCAEG;AAEN,eAAKA,OAAL,GAAe,IAAf;AAEA,eAAKC,SAAL,GAAiB,KAAKC,YAAL,CAAkBC,UAAlB,CAA6BC,GAA9C;;AAEA,eAAM,IAAIC,GAAV,IAAiB,KAAKJ,SAAL,CAAeK,IAAhC,EAAuC;AACrC,iBAAM,IAAIC,KAAV,IAAmB,KAAKN,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAA5C,EAAqD;AACnD,kBAAI,KAAKP,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAAzB,CAAgCD,KAAhC,EAAuCE,SAA3C,EAAuD;AACrD,qBAAKC,wBAAL,CAA+B,KAAKT,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAAzB,CAAgCD,KAAhC,CAA/B;AAGD;AACF;AACF;;AAED,eAAKP,OAAL,GAAe,KAAf;AACD;;;iDAE8BO,K,EAAO;;;;;;;;AACpC,yBAAK5D,WAAL,CAAiBkB,QAAjB,CAA0B0C,KAAK,CAACE,SAAN,CAAgBE,OAA1C,EAAmDJ,KAAK,CAACE,SAAN,CAAgBG,MAAnE,EACGC,SADH,CACc,UAAAtC,GAAG,EAAI;AACjBgC,2BAAK,CAACE,SAAN,CAAgBK,UAAhB,GAA6BvC,GAAG,CAACP,IAAjC;AAEA+C,6BAAO,CAACC,GAAR,CAAY,MAAI,CAACf,SAAjB;AACD,qBALH;;;;;;;;;AAMD;;;;;;;uBA3CUH,uB,EAAuB,0I;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,muB;AAAA;AAAA;ADTpC;;AAIA;;;;AAJgC;;AAIE;;AAAA;;;;;;;;;sECKrBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTtE,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAKyB,Q;;;;;;gBAEjC,mD;iBAAM,Y;;;gBACN,mD;iBAAM,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZT;;AACE;;AACF;;;;;;;;AAMQ;;AACE;;AAAW;;AAAY;;AACvB;;AAAgB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAhB;;AAGF;;;;;;;;AAJa;;AAAA;;AACuC;;AAAA;;AAAqB;;AAAvD;;;;;;;;AAMlB;;AACE;;AAAW;;AAAY;;AACvB;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkF;;AAChH;;;;;;;;AAFa;;AAAA;;AACmD;;AAAA;;AAAqB;;AAAvD;;;;;;AAa1B;;AAA+E;;AAAuC;;;;;;;;AAA5D;;AAAqB;;AAAA;;;;;;;;AATnF;;AACE;;AAAW;;AAAY;;AACvB;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAOV;;AACF;;AACF;;;;;;;;AAVa;;AAAA;;AACmC;;AAAA;;AAAlC;;AAOE;;AAAA;;;;;;AAaZ;;AAA+E;;AAAuC;;;;;;;;AAA5D;;AAAqB;;AAAA;;;;;;;;AATnF;;AACE;;AAAW;;AAAY;;AACvB;;AAAY;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAOV;;AACF;;AACF;;;;;;;;AAVa;;AAAA;;AACmC;;AAAA;;AAAlC;;AAOE;;AAAA;;;;;;AAtCpB;;AAEI;;AAQA;;AAMA;;AAaA;;AAYJ;;;;;;AAvCuD;;AAAA;;AAQA;;AAAA;;AAMA;;AAAA;;AAaA;;AAAA;;;;;;AA9BzD;;AACE;;AA0CF;;;;;;AA1CuB;;AAAA;;;;;;AAFzB;;AACE;;AA4CF;;;;;;AA5CuB;;AAAA;;;;QCGVuF,wB;AAaX,wCACUtE,WADV,EACkC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AATV,aAAAoD,WAAA,GAAwB,CAAC,cAAD,EAAiB,UAAjB,EAA6B,OAA7B,EAAsC,WAAtC,EAAmD,SAAnD,EAA8D,QAA9D,CAAxB;AAIA,aAAAC,OAAA,GAAmB,KAAnB;AAMK;;;;mCAEG;AAEN,eAAKA,OAAL,GAAe,IAAf;AAEA,eAAKC,SAAL,GAAiB,KAAKC,YAAL,CAAkBC,UAAlB,CAA6BC,GAA9C;;AAEA,cAAG,KAAKF,YAAL,CAAkBC,UAAlB,CAA6Be,IAAhC,EAAsC;AACpC,iBAAKjB,SAAL,GAAiB,KAAKC,YAAL,CAAkBC,UAAlB,CAA6Be,IAA9C;AACD;;AAED,eAAM,IAAIb,GAAV,IAAiB,KAAKJ,SAAL,CAAeK,IAAhC,EAAuC;AACrC,iBAAM,IAAIC,KAAV,IAAmB,KAAKN,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAA5C,EAAqD;AACnD,kBAAI,KAAKP,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAAzB,CAAgCD,KAAhC,EAAuCE,SAA3C,EAAuD;AACrD,qBAAKC,wBAAL,CAA+B,KAAKT,SAAL,CAAeK,IAAf,CAAoBD,GAApB,EAAyBG,MAAzB,CAAgCD,KAAhC,CAA/B;AAGD;AACF;AACF;;AAED,eAAKP,OAAL,GAAe,KAAf;AACD;;;iDAE8BO,K,EAAO;;;;;;;;AACpC,yBAAK5D,WAAL,CAAiBkB,QAAjB,CAA0B0C,KAAK,CAACE,SAAN,CAAgBE,OAA1C,EAAmDJ,KAAK,CAACE,SAAN,CAAgBG,MAAnE,EACGC,SADH,CACc,UAAAtC,GAAG,EAAI;AACjBgC,2BAAK,CAACE,SAAN,CAAgBK,UAAhB,GAA6BvC,GAAG,CAACP,IAAjC;AAEA+C,6BAAO,CAACC,GAAR,CAAY,MAAI,CAACf,SAAjB;AACD,qBALH;;;;;;;;;AAMD;;;;;;;uBA/CUgB,wB,EAAwB,0I;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,muB;AAAA;AAAA;ADRrC;;AAIA;;;;AAJgC;;AAIE;;AAAA;;;;;;;;;sECIrBA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTzF,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;gBAElC,mD;iBAAM,Y;;;gBACN,mD;iBAAM,c;;;;;;;;;;;;;;;;;;;;ACXT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQc;;AAAoC;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AACpC;;AAAqD;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;;;AAQzD;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;;;;;;;AANF;;AACE;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACJ;;AACA;;AAGA;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;AACF;;;;;;AANqG;;AAAA;;;;;;;;AAYnG;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;;;;;;;AANF;;AACE;;AAA0E;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACJ;;AACA;;AAGA;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;AACF;;;;;;AANqG;;AAAA;;;;;;AAYnG;;;;;;AAAsC,sGAA6B,YAA7B,EAA6B,iBAA7B;;;;;;AAEtC;;;;;;AAAwC,sGAA6B,YAA7B,EAA6B,iBAA7B;;;;;;AAQ9C;;AACE;;AACI;;AACI;;AACE;;AACF;;AACA;;AACI;;AACJ;;AAIJ;;AACJ;;AAIF;;;;;;AAVc;;AAAA;;;;;;AAYd;;AACE;;AACI;;AACI;;AACE;;AACF;;AACA;;AACI;;AACJ;;AAIJ;;AACJ;;AAIF;;;;;;AAVc;;AAAA;;;;;;;;AAmBZ;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AACtD;;AACF;;;;;;;;AAaA;;AAA6E;AAAA;;AAAA;;AAAA;AAAA;;AAC3E;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AAQQ;;AACE;;AACE;;AACF;;AACF;;;;;;AAFI;;AAAA;;;;;;;;;;;;AAHN;;AACE;;AAKF;;;;;;AANe;;AACC;;AAAA;;;;;;AAuBZ;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAGF;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AANJ;;AACE;;AAIA;;AAGF;;;;;;AAPQ;;AAAA;;AAIA;;AAAA;;;;;;;;AANV;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AAWF;;;;;;;;AAZuE,qFAAe,iBAAf,EAAe,IAAf;;AACxD;;AAAA;;;;;;;;;;;;AA5BnB;;AACE;;AAAc;AAAA;;AAAA;;AAAA;AAAA;;AAIZ;;AAsBA;;AAiBA;;AAEE;;AACE;;AAA6D;;AAAc;;AAC3E;;AAEF;;AAEF;;AACF;;AAGF;;;;;;;;;;AAvDgB;;AAAA,8GAAsC,mBAAtC,EAAsC,IAAtC;;AAI4B;;AAAA;;AAsB5B;;AAAA;;AAmBqB;;AAAA;;AACX;;AAAA;;AAClB;;AAAA;;;;;;AAjDV;;AACE;;;;AAyDF;;;;;;AAzD0B;;AAAA;;;;QDlHnByF,wB;AAkCX,wCACUxE,WADV,EAEUI,WAFV,EAGUqE,cAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,aAAA1E,WAAA,GAAAA,WAAA;AACA,aAAAI,WAAA,GAAAA,WAAA;AACA,aAAAqE,cAAA,GAAAA,cAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AApCV,aAAAC,KAAA,GAAa,IAAb;AACA,aAAAC,kBAAA,GAA0B,IAA1B;AAIA,aAAAC,IAAA,GAAY,EAAZ;AAIA,aAAAxB,OAAA,GAAmB,KAAnB;AAEA,aAAAnC,QAAA,GAA4B,IAA5B;AACA,aAAAb,QAAA,GAAW,IAAX;AACA,aAAAC,QAAA,GAAoB,KAApB;AACA,aAAAC,OAAA,GAAmB,KAAnB;AACA,aAAAC,QAAA,GAAoB,KAApB;AAEA,aAAAC,WAAA,GAAc,IAAd;AAEA,aAAAC,UAAA,GAAkB,EAAlB;AACA,aAAAC,YAAA,GAAoB,IAApB;AAEA,aAAAC,YAAA,GAAe;AACbC,gBAAM,EAAE,KADK;AAEbC,iBAAO,EAAE;AAFI,SAAf;AAKA,aAAAC,UAAA,GAAa;AACXF,gBAAM,EAAE,KADG;AAEXC,iBAAO,EAAE;AAFE,SAAb;AAoOA,aAAAgE,MAAA,GAAS;AACPC,eAAK,EAAE;AACLzD,wBAAY,EAAE,OADT;AAEL0D,yBAAa,EAAE,MAFV;AAGLjC,gBAAI,EAAE,MAHD;AAILiB,mBAAO,EAAE,OAJJ;AAKLiB,qBAAS,EAAE;AACTC,kBAAI,EAAE,CACJ;AACElC,oBAAI,EAAE,cADR;AAEEY,qBAAK,EAAE;AAFT,eADI,EAKJ;AACEZ,oBAAI,EAAE,YADR;AAEEY,qBAAK,EAAE;AAFT,eALI,EASJ;AACEZ,oBAAI,EAAE,WADR;AAEEY,qBAAK,EAAE;AAFT,eATI,EAaJ;AACEZ,oBAAI,EAAE,eADR;AAEEY,qBAAK,EAAE;AAFT,eAbI;AADG,aALN;AAyBLJ,sBAAU,EAAE;AACVC,iBAAG,EAAE;AACHE,oBAAI,EAAE,CACJ;AACEE,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,cADR;AAEEY,yBAAK,EAAE,cAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBADI,EAUJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,YADR;AAEEY,yBAAK,EAAE,YAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM,EAMN;AACEnC,wBAAI,EAAE,WADR;AAEEY,yBAAK,EAAE,WAFT;AAGEuB,wBAAI,EAAE;AAHR,mBANM;AADV,iBAVI,EAwBJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,eADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM,EAMN;AACEnC,wBAAI,EAAE,SADR;AAEEY,yBAAK,EAAE,SAFT;AAGEuB,wBAAI,EAAE,yBAHR;AAIErB,6BAAS,EAAE;AACTE,6BAAO,EAAE,OADA;AAEToB,mCAAa,EAAE,cAFN;AAGTnB,4BAAM,EAAE;AAHC;AAJb,mBANM;AADV,iBAxBI,EA2CJ;AACEJ,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,QADR;AAEEY,yBAAK,EAAE,QAFT;AAGEuB,wBAAI,EAAE,wBAHR;AAIErB,6BAAS,EAAE;AACTE,6BAAO,EAAE,kBADA;AAEToB,mCAAa,EAAE,MAFN;AAGTnB,4BAAM,EAAE;AAHC;AAJb,mBADM;AADV,iBA3CI,EAyDJ;AACEJ,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,OADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE,wBAHR;AAIErB,6BAAS,EAAE;AACTE,6BAAO,EAAE,iBADA;AAEToB,mCAAa,EAAE,MAFN;AAGTnB,4BAAM,EAAE;AAHC;AAJb,mBADM;AADV,iBAzDI,EAuEJ;AACEJ,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,UADR;AAEEY,yBAAK,EAAE,UAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBAvEI;AADH,eADK;AAoFVZ,kBAAI,EAAE;AACJc,6BAAa,EAAE;AACb1B,sBAAI,EAAE,CACJ;AACEE,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,eADR;AAEEY,2BAAK,EAAE,cAFT;AAGEuB,0BAAI,EAAE;AAHR,qBADM;AADV,mBADI,EAUJ;AACEtB,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,YADR;AAEEY,2BAAK,EAAE,YAFT;AAGEuB,0BAAI,EAAE;AAHR,qBADM,EAMN;AACEnC,0BAAI,EAAE,WADR;AAEEY,2BAAK,EAAE,WAFT;AAGEuB,0BAAI,EAAE;AAHR,qBANM;AADV,mBAVI,EAwBJ;AACEtB,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,eADR;AAEEY,2BAAK,EAAE,OAFT;AAGEuB,0BAAI,EAAE;AAHR,qBADM,EAMN;AACEnC,0BAAI,EAAE,SADR;AAEEY,2BAAK,EAAE,SAFT;AAGEuB,0BAAI,EAAE,yBAHR;AAIErB,+BAAS,EAAE;AACTE,+BAAO,EAAE,OADA;AAEToB,qCAAa,EAAE,cAFN;AAGTnB,8BAAM,EAAE;AAHC;AAJb,qBANM;AADV,mBAxBI,EA2CJ;AACEJ,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,QADR;AAEEY,2BAAK,EAAE,QAFT;AAGEuB,0BAAI,EAAE,wBAHR;AAIErB,+BAAS,EAAE;AACTE,+BAAO,EAAE,kBADA;AAEToB,qCAAa,EAAE,MAFN;AAGTnB,8BAAM,EAAE;AAHC;AAJb,qBADM;AADV,mBA3CI,EAyDJ;AACEJ,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,OADR;AAEEY,2BAAK,EAAE,OAFT;AAGEuB,0BAAI,EAAE,wBAHR;AAIErB,+BAAS,EAAE;AACTE,+BAAO,EAAE,iBADA;AAEToB,qCAAa,EAAE,MAFN;AAGTnB,8BAAM,EAAE;AAHC;AAJb,qBADM;AADV,mBAzDI,EAuEJ;AACEJ,0BAAM,EAAE,CACN;AACEb,0BAAI,EAAE,UADR;AAEEY,2BAAK,EAAE,UAFT;AAGEuB,0BAAI,EAAE;AAHR,qBADM;AADV,mBAvEI;AADO,iBADX;AAqFJG,6BAAa,EAAE,EArFX;AAwFJC,+BAAe,EAAE,CACf;AACEvC,sBAAI,EAAE,QADR;AAEEgB,yBAAO,EAAE;AAFX,iBADe,CAxFb;AA8FJwB,+BAAe,EAAE,EA9Fb;AAiGJ7B,oBAAI,EAAE,CACJ;AACEE,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,cADR;AAEEY,yBAAK,EAAE,cAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBADI,EAUJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,YADR;AAEEY,yBAAK,EAAE,YAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM,EAMN;AACEnC,wBAAI,EAAE,WADR;AAEEY,yBAAK,EAAE,WAFT;AAGEuB,wBAAI,EAAE;AAHR,mBANM;AADV,iBAVI,EAwBJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,eADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM,EAMN;AACEnC,wBAAI,EAAE,SADR;AAEEY,yBAAK,EAAE,SAFT;AAGEuB,wBAAI,EAAE,yBAHR;AAIErB,6BAAS,EAAE;AACTE,6BAAO,EAAE,OADA;AAEToB,mCAAa,EAAE,cAFN;AAGTnB,4BAAM,EAAE;AAHC;AAJb,mBANM;AADV,iBAxBI,EA2CJ;AACEJ,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,UADR;AAEEY,yBAAK,EAAE,UAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBA3CI;AAjGF;AApFI;AAzBP,WADA;AAuQPM,gBAAM,EAAE;AACNnE,wBAAY,EAAE,QADR;AAEN0D,yBAAa,EAAE,OAFT;AAGNjC,gBAAI,EAAE,OAHA;AAINiB,mBAAO,EAAE,kBAJH;AAKNiB,qBAAS,EAAE;AACTC,kBAAI,EAAE,CACJ;AACElC,oBAAI,EAAE,MADR;AAEEY,qBAAK,EAAE;AAFT,eADI,EAKJ;AACEZ,oBAAI,EAAE,SADR;AAEEY,qBAAK,EAAE,SAFT;AAGEE,yBAAS,EAAE;AACTE,yBAAO,EAAE,OADA;AAEToB,+BAAa,EAAE,cAFN;AAGTnB,wBAAM,EAAE;AAHC;AAHb,eALI,EAcJ;AACEjB,oBAAI,EAAE,eADR;AAEEY,qBAAK,EAAE;AAFT,eAdI;AADG,aALL;AA0BNJ,sBAAU,EAAE;AACVC,iBAAG,EAAE;AACHE,oBAAI,EAAE,CACJ;AACEE,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,MADR;AAEEY,yBAAK,EAAE,MAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM,EAMN;AACEnC,wBAAI,EAAE,SADR;AAEEY,yBAAK,EAAE,SAFT;AAGEuB,wBAAI,EAAE,yBAHR;AAIErB,6BAAS,EAAE;AACTE,6BAAO,EAAE,OADA;AAEToB,mCAAa,EAAE,cAFN;AAGTnB,4BAAM,EAAE;AAHC;AAJb,mBANM;AADV,iBADI,EAoBJ;AACEJ,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,eADR;AAEEY,yBAAK,EAAE,eAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBApBI,EA6BJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,OADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBA7BI;AADH;AADK;AA1BN,WAvQD;AA6UPO,eAAK,EAAE;AACLpE,wBAAY,EAAE,OADT;AAEL0D,yBAAa,EAAE,MAFV;AAGLjC,gBAAI,EAAE,gBAHD;AAILiB,mBAAO,EAAE,iBAJJ;AAKLiB,qBAAS,EAAE;AACTC,kBAAI,EAAE,CACJ;AACElC,oBAAI,EAAE,MADR;AAEEY,qBAAK,EAAE;AAFT,eADI;AADG,aALN;AAsBLJ,sBAAU,EAAE;AACVC,iBAAG,EAAE;AACHE,oBAAI,EAAE,CACJ;AACEE,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,MADR;AAEEY,yBAAK,EAAE,MAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBADI,EAUJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,OADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBAVI;AADH;AADK;AAtBP,WA7UA;AA4XPQ,kBAAQ,EAAE;AACRrE,wBAAY,EAAE,UADN;AAER0D,yBAAa,EAAE,UAFP;AAGRjC,gBAAI,EAAE,OAHE;AAIRiB,mBAAO,EAAE,oBAJD;AAKRiB,qBAAS,EAAE;AACTC,kBAAI,EAAE,CACJ;AACElC,oBAAI,EAAE,MADR;AAEEY,qBAAK,EAAE;AAFT,eADI,EAKJ;AACEZ,oBAAI,EAAE,OADR;AAEEY,qBAAK,EAAE;AAFT,eALI,EASJ;AACEZ,oBAAI,EAAE,aADR;AAEEY,qBAAK,EAAE;AAFT,eATI;AADG,aALH;AA8BRJ,sBAAU,EAAE;AACVC,iBAAG,EAAE;AACHE,oBAAI,EAAE,CACJ;AACEE,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,MADR;AAEEY,yBAAK,EAAE,KAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBADI,EAUJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,OADR;AAEEY,yBAAK,EAAE,OAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBAVI,EAmBJ;AACEtB,wBAAM,EAAE,CACN;AACEb,wBAAI,EAAE,aADR;AAEEY,yBAAK,EAAE,aAFT;AAGEuB,wBAAI,EAAE;AAHR,mBADM;AADV,iBAnBI;AADH;AADK;AA9BJ;AA5XH,SAAT;;AAzNE,aAAKT,MAAL,CAAYkB,kBAAZ,CAA+BC,gBAA/B,GAAkD;AAChD,iBAAO,KAAP;AACF,SAFA,CAFsB,CAOtB;;AACD;;;;sCAEU;AACTzB,iBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,eAAKnD,QAAL,GAAgB,IAAhB;AACA,eAAKA,QAAL,GAAgB,IAAhB;AACA,eAAKyD,KAAL,GAAa,IAAb;AACA,eAAKpB,YAAL,GAAoB,IAApB;AAEA,eAAKuC,SAAL,CAAeC,WAAf;AACD;;;sCAEU;AACT3B,iBAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;;mCAEO;AAAA;;AAEN,eAAKnD,QAAL,GAAgB,IAAhB;AACA,eAAKyD,KAAL,GAAa,IAAb;AACA,eAAKpB,YAAL,GAAoB,IAApB;AAEA,eAAKF,OAAL,GAAe,IAAf;AAEA,eAAKoB,cAAL,CAAoBuB,MAApB,CACG9B,SADH,CACc,UAAA8B,MAAM,EAAI;AACpB;AACA,kBAAI,CAACrB,KAAL,GAAaqB,MAAM,CAACrB,KAApB;AAEA,kBAAI,CAACC,kBAAL,GAA0B,MAAI,CAACE,MAAL,WAAe,MAAI,CAACH,KAApB,GAA6BrD,YAAvD;AACA,kBAAI,CAACiC,YAAL,GAAoB,MAAI,CAACuB,MAAL,WAAe,MAAI,CAACH,KAApB,EAApB;;AAEA,kBAAI,CAACsB,WAAL;AAGD,WAXH;AAaD;;;sCAGa;AAAA;;AACZ,cAAG,KAAKtB,KAAL,IAAc,OAAjB,EAA0B;AACxB,iBAAKzD,QAAL,GAAgB,KAAKlB,WAAL,CAAiBkB,QAAjB,CAA0B,KAAKyD,KAA/B,EAAsC,EAAtC,EACfxD,IADe,CAEd,2DAAI,UAAEC,CAAF;AAAA,qBAAwBA,CAAC,CAACC,IAA1B;AAAA,aAAJ,CAFc,CAAhB;AAKD,WAND,MAOK;AACH,iBAAKH,QAAL,GAAgB,KAAKlB,WAAL,CAAiBkB,QAAjB,qBAAuC,KAAKyD,KAA5C,GAAqD,EAArD,EACbxD,IADa,CAEZ,2DAAI,UAAEC,CAAF;AAAA,qBAAwBA,CAAC,CAACC,IAA1B;AAAA,aAAJ,CAFY,CAAhB;AAID;;AAGD,eAAKyE,SAAL,GAAiB,KAAK5E,QAAL,CAAcgD,SAAd,CAAyB,UAAAgC,OAAO,EAAI;AACnD,gBAAIC,EAAE,GAAG,MAAI,CAACrB,MAAL,CAAY,MAAI,CAACH,KAAjB,EAAwBM,SAAjC;AACAkB,cAAE,CAACjB,IAAH,CAAQkB,OAAR,CAAiB,UAAAC,GAAG,EAAI;AACtB,kBAAIA,GAAG,CAACvC,SAAR,EAAoB;AAClBoC,uBAAO,CAACE,OAAR,CAAiB,UAAAE,MAAM,EAAI;AACzB,sBAAGA,MAAM,CAACD,GAAG,CAACzC,KAAL,CAAT,EAAsB;AACpB,0BAAI,CAAC5D,WAAL,CAAiBuG,OAAjB,CAAyBF,GAAG,CAACvC,SAAJ,CAAcE,OAAvC,EAAgDsC,MAAM,CAACD,GAAG,CAACzC,KAAL,CAAtD,EACCM,SADD,CACY,UAAAtC,GAAG,EAAI;AACjB0E,4BAAM,WAAID,GAAG,CAACzC,KAAR,EAAN,GAAyBhC,GAAzB;;AAEA,4BAAI,CAACiD,IAAL,CAAU2B,IAAV,CAAeF,MAAf;;AAEAlC,6BAAO,CAACC,GAAR,CAAYiC,MAAZ;AACD,qBAPD,EAOGG,MAPH;AAQD,mBATD,MASO;AACL,0BAAI,CAAC5B,IAAL,CAAU2B,IAAV,CAAeF,MAAf;AACD;AAEF,iBAdD;AAeD;AACF,aAlBD;AAoBAlC,mBAAO,CAACC,GAAR,CAAY6B,OAAZ;AACA,kBAAI,CAAC7C,OAAL,GAAe,KAAf;AACAe,mBAAO,CAACC,GAAR,CAAY,MAAI,CAAChB,OAAjB;AACD,WAzBgB,CAAjB;AA0BD;;;gCAGO;AAEN,eAAK9C,OAAL,GAAe,IAAf;AACA,eAAKD,QAAL,GAAgB,IAAhB;AAGD;;;mCAEU;AAAA;;AACT,eAAKN,WAAL,CAAiB0B,YAAjB,CAA8B,KAAK6B,YAAL,CAAkBS,OAAhD,EAAyD,KAAKtD,UAAL,CAAgBe,GAAzE,EAA8E,KAAKf,UAAnF,EACGiB,IADH,CACS,UAAAC,GAAG,EAAI;AACZ,kBAAI,CAAChB,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,kBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,4DAA5B;AAIAgB,sBAAU,CAAE,YAAM;AAChB,oBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,oBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,EAA5B,CAFgB,CAGhB;;AACA,oBAAI,CAACR,QAAL,GAAgB,KAAhB;AACA,oBAAI,CAACE,QAAL,GAAgB,KAAhB;;AACA,oBAAI,CAACqB,OAAL;AACD,aAPS,EAOP,IAPO,CAAV;AAQD,WAfH,WAgBU,UAAAE,KAAK,EAAI;AACf,kBAAI,CAAChB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,kBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0BiB,KAA1B;AACD,WAnBH;AAqBAqC,iBAAO,CAACC,GAAR,CAAY,KAAK3D,UAAjB;AACD;;;iCAEQ;AAAA;;AAEP,eAAKV,WAAL,CAAiBgC,YAAjB,CAA8B,KAAKuB,YAAL,CAAkBS,OAAhD,EAAyD,KAAKtD,UAA9D,EACCiB,IADD,CACO,UAAAC,GAAG,EAAI;AACZwC,mBAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,kBAAI,CAACzD,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,kBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,4CAA5B;AAEAsD,mBAAO,CAACC,GAAR,CAAY,sBAAZ;;AAEA,kBAAI,CAACxC,OAAL;;AAEAC,sBAAU,CAAE,YAAM;AAChB,oBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,oBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,EAA5B;AACD,aAHS,EAGP,IAHO,CAAV;AAID,WAdD,WAeQ,UAAAiB,KAAK,EAAI;AACf,kBAAI,CAAChB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,kBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0BiB,KAA1B;AACD,WAlBD;AAoBD;;;kCAES;AAAA;;AACR,eAAKzB,QAAL,GAAgB,KAAhB;AACA,eAAKC,OAAL,GAAe,KAAf;AACA,eAAKC,QAAL,GAAgB,KAAhB;AACA,eAAKH,QAAL,GAAgB,EAAhB;AACA,eAAKM,YAAL,GAAoB,IAApB;AACA,eAAKD,UAAL,GAAkB,EAAlB;AACA,eAAK2C,OAAL,GAAe,KAAf,CAPQ,CAQR;AACA;;AAEAvB,oBAAU,CAAE,YAAM;AAChB,mBAAI,CAAClB,YAAL,CAAkBC,MAAlB,GAA2B,KAA3B;AACA,mBAAI,CAACE,UAAL,CAAgBF,MAAhB,GAAyB,KAAzB;AACD,WAHS,EAGP,IAHO,CAAV;AAID;;;mCAEU;AAAA;;AAET,eAAKT,WAAL,CAAiB6B,KAAjB,GACGN,IADH,CACS,UAAAC,GAAG,EAAI;AACZ,mBAAI,CAAClB,UAAL,CAAgBwB,UAAhB,GAA6BN,GAAG,CAACO,IAAJ,CAASV,GAAtC;AACA,mBAAI,CAACf,UAAL,CAAgB0B,UAAhB,GAA6B,IAAIC,IAAJ,EAA7B;AAEA,gBAAIC,UAAU,GAAG,OAAI,CAAC5B,UAAtB;;AAEA,mBAAI,CAACV,WAAL,CAAiBgC,YAAjB,CAA8B,iBAA9B,EAAiDM,UAAjD,EACGX,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,qBAAI,CAACC,OAAL;;AACA,qBAAI,CAAC7B,WAAL,CAAiBuC,YAAjB,CAA8B,OAA9B,EAAuCD,UAAU,CAACb,GAAlD,EAAuD,EAAvD,EACGE,IADH,CACS,UAAAC,GAAG,EAAI;AACZ,uBAAI,CAAChB,YAAL,CAAkBC,MAAlB,GAA2B,IAA3B;AACA,uBAAI,CAACD,YAAL,CAAkBE,OAAlB,GAA4B,iDAA5B,CAFY,CAGZ;AACD,eALH;AAMD,aATH,WAUU,UAAA0B,GAAG,EAAI;AACb,qBAAI,CAACzB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,qBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0B0B,GAA1B,CAFa,CAGb;AACD,aAdH;AAeD,WAtBH,WAuBU,UAAAA,GAAG,EAAI;AACb,mBAAI,CAACzB,UAAL,CAAgBF,MAAhB,GAAyB,IAAzB;AACA,mBAAI,CAACE,UAAL,CAAgBD,OAAhB,GAA0B0B,GAA1B,CAFa,CAGb;AACD,WA3BH;AA6BD;;;uCAEc8D,M,EAAQ;AAAA;;AACrB,eAAKjD,OAAL,GAAe,IAAf;AACAvB,oBAAU,CAAE,YAAM;AAChB,mBAAI,CAACpB,UAAL,GAAkB4F,MAAlB;AACA,mBAAI,CAAC3F,YAAL,GAAoB2F,MAApB;AACA,mBAAI,CAAChG,QAAL,GAAgB,IAAhB;AACA,mBAAI,CAACE,QAAL,GAAgB,IAAhB;AACD,WALS,EAKP,IALO,CAAV;AAMD;;;iCAEQ,CAER;;;2CAEkB,CAAE;;;sCAEP,CAAE;;;;;;;uBA9PLgE,wB,EAAwB,0I,EAAA,0I,EAAA,+H,EAAA,uH;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,oF;AAAA,e;AAAA,c;AAAA,8hF;AAAA;AAAA;ACbrC;;AACE;;AAEE;;AACE;;AACE;;AACE;;AAEI;;AACA;;AACJ;;AACF;;AAEA;;AAYA;;AAWF;;AACA;;AACE;;AAGE;;AAEA;;AACF;;AACF;;AACF;;AAEF;;AACA;;AAEE;;AAmBA;;AAkBF;;AACE;;AACE;;AAEI;;AAAoB;;AAAwB;;AAChD;;AACF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AACE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAA0E;AAAA,mBAAS,IAAA/B,MAAA,EAAT;AAAiB,WAAjB;;AACtE;;AACJ;;AACA;;AAGA;;AAA6E;AAAA,mBAAS,IAAAZ,OAAA,EAAT;AAAkB,WAAlB;;AAC3E;;AACF;;AACF;;AACF;;AAIA;;AACI;;AAGA;;AA8DF;;AAEF;;AAEF;;;;AA/LuD;;AAAA;;AAOrB;;AAAA;;AACA;;AAAA;;AAIE;;AAAA;;AAYA;;AAAA;;AAgBJ;;AAAA;;AAEC;;AAAA;;AAQiC;;AAAA;;AAmBD;;AAAA;;AAsBnC;;AAAA;;AAImD;;AAAA;;AAewB;;AAAA;;AAY1B;;AAAA;;AAGhB;;AAAA;;;;;;;;;;sEDjHlD2C,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT3F,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAea2H,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBAPf,CACP,4DADO,CAOe;;;;0HAAbA,a,EAAa;AAAA,uBART,2EAQS;AARO,kBAE7B,4DAF6B,CAQP;AANV,kBAGZ,2EAHY;AAMU,O;AAHN,K;;;;;sEAGPA,a,EAAa;cATzB,sDASyB;eAThB;AACRxD,sBAAY,EAAE,CAAC,2EAAD,CADN;AAERvD,iBAAO,EAAE,CACP,4DADO,CAFD;AAKRC,iBAAO,EAAE,CACP,2EADO;AALD,S;AASgB,Q;;;;;;;;;;;;;;;;;;ACf1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+G,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,8B;AAAA;AAAA;ACP7B;;AACE;;AACF;;;;;;;;sEDKaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT9H,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q","file":"admin-admin-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-access-management',\n  templateUrl: './admin-access-management.component.html',\n  styleUrls: ['./admin-access-management.component.scss']\n})\nexport class AdminAccessManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\" style=\"height: 100%;\">\n  <!-- <div class=\"alert alert-app-level\">\n      ...\n  </div> -->\n  <header class=\"header header-5\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">Access Management</span>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\">\n    <clr-vertical-nav>\n      <a clrVerticalNavLink routerLink=\"./users\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"user\"></clr-icon>\n          Users\n      </a>\n      <a clrVerticalNavLink routerLink=\"./groups\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"users\"></clr-icon>\n          Groups\n      </a>\n      <a clrVerticalNavLink routerLink=\"./roles\" routerLinkActive=\"active\">\n          <clr-icon clrVerticalNavIcon shape=\"employee-group\"></clr-icon>\n          Roles\n      </a>\n    </clr-vertical-nav>\n    <div class=\"content-area\" style=\"padding: 0;\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-class-manager',\n  templateUrl: './admin-class-manager.component.html',\n  styleUrls: ['./admin-class-manager.component.scss']\n})\nexport class AdminClassManagerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-class-manager works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-groups',\n  templateUrl: './admin-groups.component.html',\n  styleUrls: ['./admin-groups.component.scss']\n})\nexport class AdminGroupsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-groups works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-roles',\n  templateUrl: './admin-roles.component.html',\n  styleUrls: ['./admin-roles.component.scss']\n})\nexport class AdminRolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-roles works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminComponent } from './admin.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { AdminGroupsComponent } from './admin-groups/admin-groups.component';\nimport { AdminAccessManagementComponent } from './admin-access-management/admin-access-management.component';\nimport { AdminRolesComponent } from './admin-roles/admin-roles.component';\nimport { AdminSettingsComponent } from './admin-settings/admin-settings.component';\nimport { AdminClassManagerComponent } from './admin-class-manager/admin-class-manager.component';\nimport { AdminRecordListComponent } from './components/admin-record-list/admin-record-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'users',\n      },\n      {\n        path: ':table',\n        component: AdminRecordListComponent\n      },\n      {\n        path: 'users',\n        component: AdminUsersComponent\n      },\n      {\n        path: 'groups',\n        component: AdminGroupsComponent\n      },\n      {\n        path: 'roles',\n        component: AdminRolesComponent\n      },\n      {\n        path: 'roles',\n        component: AdminRolesComponent\n      },\n      {\n        path: 'class-manager',\n        component: AdminClassManagerComponent\n      },\n      {\n        path: 'settings',\n        component: AdminSettingsComponent\n      },\n      {\n        path: 'access-management',\n        component: AdminAccessManagementComponent,\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            redirectTo: 'users'\n          },\n          {\n            path: 'users',\n            component: AdminUsersComponent\n          },\n          {\n            path: 'groups',\n            component: AdminGroupsComponent\n          },\n          {\n            path: 'roles',\n            component: AdminRolesComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-settings',\n  templateUrl: './admin-settings.component.html',\n  styleUrls: ['./admin-settings.component.scss']\n})\nexport class AdminSettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-ticket-classes',\n  templateUrl: './admin-ticket-classes.component.html',\n  styleUrls: ['./admin-ticket-classes.component.scss']\n})\nexport class AdminTicketClassesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-ticket-classes works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-admin-user-add',\n  templateUrl: './admin-user-add.component.html',\n  styleUrls: ['./admin-user-add.component.scss']\n})\nexport class AdminUserAddComponent implements OnInit {\n\n  alert: boolean = false;\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(){\n\n  }\n\n  // onSave() {\n  //   this.dataService.createRecord('users', this.userRecord)\n  //     .then( res => {\n  //       console.log(res);\n  //     })\n  // }\n\n}\n","<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.first_name\" name=\"first_name\" placeholder=\"First Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.last_name\" name=\"last_name\" placeholder=\"Last Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput type=\"email\" [(ngModel)]=\"userRecord.email\" name=\"email\" placeholder=\"Email Address\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"userRecord.password\" name=\"passowrd\" placeholder=\"Password\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-user-edit',\n  templateUrl: './admin-user-edit.component.html',\n  styleUrls: ['./admin-user-edit.component.scss']\n})\nexport class AdminUserEditComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>First Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.first_name\" name=\"first_name\" placeholder=\"First Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Last Name</mat-label>\n        <input matInput [(ngModel)]=\"userRecord.last_name\" name=\"last_name\" placeholder=\"Last Name\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n\n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Email Address</mat-label>\n        <input matInput type=\"email\" [(ngModel)]=\"userRecord.email\" name=\"email\" placeholder=\"Email Address\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n<div class=\"clr-row\">\n  <div class=\"clr-col\">\n\n      <mat-form-field class=\"w-100\" appearance=\"outline\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" [(ngModel)]=\"userRecord.password\" name=\"passowrd\" placeholder=\"Password\">\n        <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n        <!-- <mat-hint>Hint</mat-hint> -->\n      </mat-form-field>\n  \n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.scss']\n})\nexport class AdminUsersComponent implements OnInit {\n\n  users$: Observable<any>;\n  selected = null;\n  sideOpen: boolean = false;\n  addUser: boolean = false;\n  editUser: boolean = false;\n\n  detailState = null;\n\n  userRecord: any = {};\n  selectedUser: any = null;\n\n  alertSuccess = {\n    active: false,\n    message: 'test'\n  }\n\n  alertError = {\n    active: false,\n    message: 'test'\n  }\n\n  constructor(\n    private dataService: DataService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loadUsers();\n\n  }\n\n  loadUsers() {\n    this.users$ = this.dataService.records$('users', {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data)\n      )\n  }\n\n\n  onAdd() {\n\n    this.addUser = true;\n    this.sideOpen = true;\n\n\n  }\n\n  onSave() {\n\n    this.userRecord.display_name = this.userRecord.first_name + ' ' + this.userRecord.last_name;\n\n    if(this.userRecord._id) {\n      this.dataService.updateRecord('users', this.userRecord._id, this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The changes to the user record have been saved to the database.'\n        \n\n        this.onClose();\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          this.userRecord = {};\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n    }\n    else {\n      this.dataService.createRecord('users', this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The user has been added to the database.'\n        \n\n        this.onClose();\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          this.userRecord = {};\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n    }\n\n  }\n\n  onClose() {\n    this.sideOpen = false;\n    this.addUser = false;\n    this.editUser = false;\n    this.selected = null;\n    this.userRecord = {};\n    // console.log(this.selectedUser);\n    //this.selectedUser = {};\n\n    setTimeout( () => {\n      this.alertSuccess.active = false;\n      this.alertError.active = false;\n    }, 3000);\n  }\n\n  onDelete() {\n\n    this.authService.logIn()\n      .then( res => {\n        this.userRecord.deleted_by = res.user._id;\n        this.userRecord.deleted_at = new Date();\n\n        let deleteThis = this.userRecord;\n\n        this.dataService.createRecord('deleted-records', deleteThis)\n          .then(res => {\n            this.onClose();\n            this.dataService.deleteRecord('users', deleteThis._id, {})\n              .then( res => {\n                this.alertSuccess.active = true;\n                this.alertSuccess.message = 'The user records was deleted from the database.';\n                //this.onClose();\n              })\n          })\n          .catch( err => {\n            this.alertError.active = true;\n            this.alertError.message = err;\n            //this.onClose();\n          })\n      })\n      .catch( err => {\n        this.alertError.active = true;\n        this.alertError.message = err;\n        //this.onClose();\n      })\n\n  }\n\n  selectionChanged() {\n    this.userRecord = this.selectedUser;\n    this.sideOpen = true;\n    this.editUser = true;\n  }\n\n  onEdit() {\n\n  }\n\n  onExportSelected() {}\n\n  onExportAll() {}\n\n}\n","<mat-sidenav-container class=\"main-container\" style=\"height: 100%;\">\n  <mat-sidenav position=\"end\" style=\"min-width: 60%;\" [opened]=\"sideOpen\">\n\n    <div class=\"main-container\" style=\"height: 100%;\">\n      <header class=\"header header-4\">\n        <div class=\"branding\">\n          <a routerLink=\"./\" class=\"nav-link\">\n              <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n              <span class=\"title\" *ngIf=\"addUser\">Add User</span>\n              <span class=\"title\" *ngIf=\"editUser\">{{ selectedUser.display_name }}</span>\n          </a>\n        </div>\n    \n        <div class=\"header-actions\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n      </header>\n      <div class=\"content-container\">\n        <div class=\"content-area\">\n          <app-admin-user-add *ngIf=\"addUser\" [userRecord]=\"userRecord\"></app-admin-user-add>\n          <app-admin-user-edit *ngIf=\"editUser\" [userRecord]=\"userRecord\"></app-admin-user-edit>\n        </div>\n      </div>\n    </div>\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n\n    <div class=\"alert alert-app-level alert-success\" role=\"alert\" *ngIf=\"alertSuccess.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertSuccess.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n\n    <div class=\"alert alert-app-level alert-danger\" role=\"alert\" *ngIf=\"alertError.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertError.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n  <header class=\"header header-4\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">Users</span>\n      </a>\n    </div>\n    <div class=\"header-nav\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" (click)=\"onAdd();\">\n        <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\" style=\"height: calc(100% - 60px);\">\n      <div class=\"content-area\" style=\"padding: 0 !important;\">\n        <div class=\"admin-data\" *ngIf=\"users$ | async as users\" style=\"height: 100%;\">\n          <clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\"\n          (clrDgSingleSelectedChange)=\"selectionChanged()\"\n            style=\"min-height: 100% !important; border: 0 !important;\">\n        \n            <!-- <clr-dg-action-bar style=\"margin-top: 0 !important;\">\n              <div class=\"btn-group\">\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onAdd()\"><clr-icon shape=\"plus\"></clr-icon> Add User</button>\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" ><clr-icon shape=\"close\"></clr-icon> Delete</button>\n                  <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onEdit()\" *ngIf=\"selected.length == 1\"><clr-icon shape=\"pencil\"></clr-icon> Edit</button>\n              </div>\n              <div class=\"btn-group\">\n                  <clr-dropdown>\n                      <button type=\"button\" class=\"btn btn-sm btn-secondary\" clrDropdownTrigger>\n                          Export\n                          <clr-icon shape=\"caret down\"></clr-icon>\n                      </button>\n                      <clr-dropdown-menu clrPosition=\"bottom-left\" *clrIfOpen>\n                          <button type=\"button\" (click)=\"onExportAll()\" clrDropdownItem>Export All</button>\n                          <button type=\"button\" (click)=\"onExportSelected()\" [disabled]=\"selected.length === 0\" clrDropdownItem>Export Selected Items</button>\n                      </clr-dropdown-menu>\n                  </clr-dropdown>\n              </div>\n            </clr-dg-action-bar> -->\n\n\n        \n            <clr-dg-column [clrDgField]=\"'display_name'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Display Name\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'email'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Email\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'created_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Created\n              </ng-container>\n            </clr-dg-column>\n            <clr-dg-column [clrDgField]=\"'updated_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                Updated\n              </ng-container>\n            </clr-dg-column>\n          \n            <clr-dg-row *clrDgItems=\"let user of users\" [clrDgItem]=\"user\" [clrDgSelectable]=\"true\">\n              <clr-dg-cell>{{user.display_name}}</clr-dg-cell>\n              <clr-dg-cell>{{user.email}}</clr-dg-cell>\n              <clr-dg-cell>{{user.created_at | date}}</clr-dg-cell>\n              <clr-dg-cell>{{user.updated_at | date}}</clr-dg-cell>\n            </clr-dg-row>\n        \n        \n            <!-- Record Details -->\n\n            <clr-dg-footer>\n\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"30\">\n                <clr-dg-page-size [clrPageSizeOptions]=\"[30,50,100,200,500]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n                of {{pagination.totalItems}} users\n              </clr-dg-pagination>\n\n            </clr-dg-footer>\n          </clr-datagrid>\n        \n          <!-- Selected users: <span *ngFor=\"let user of selected\">{{user.name}}</span> -->\n        </div>\n      </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n    </div>\n\n  </mat-sidenav-content>\n\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  adminCollapse: boolean = true;\n  adminCollapsed: boolean = true;\n\n  navItems = [\n    {\n      path: './users',\n      icon: 'user',\n      name: 'Users'\n    },\n    {\n      path: './groups',\n      icon: 'users',\n      name: 'Groups'\n    },\n    {\n      path: './roles',\n      icon: 'employee-group',\n      name: 'Roles'\n    },\n    {\n      path: './ticket-classes',\n      icon: 'tree-view',\n      name: 'Class Manager'\n    },\n    {\n      path: './settings',\n      icon: 'cog',\n      name: 'Settings'\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\" style=\"height: 100%;\">\n  <!-- <nav class=\"subnav\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link active\" href=\"#\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Management</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Cloud</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Tenants</a>\n        </li>\n    </ul>\n\t</nav> -->\n  <div class=\"content-container\">\n    <clr-vertical-nav [clrVerticalNavCollapsible]=\"true\" [clrVerticalNavCollapsed]=\"true\" class=\"nav-trigger--bottom\">\n      <a clrVerticalNavLink routerLink=\"{{ i.path }}\" routerLinkActive=\"active\" *ngFor=\"let i of navItems\">\n        <clr-icon clrVerticalNavIcon [attr.shape]=\"i.icon\"></clr-icon>\n        {{ i.name }}\n      </a>\n    </clr-vertical-nav>\n    <div class=\"content-area\" style=\"padding: 0;\">\n      <router-outlet></router-outlet>\n    </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { ClarityModule } from '@clr/angular';\nimport { MaterialUiModule } from '../material-ui/material-ui.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminAccessManagementComponent } from './admin-access-management/admin-access-management.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { AdminGroupsComponent } from './admin-groups/admin-groups.component';\nimport { AdminRolesComponent } from './admin-roles/admin-roles.component';\nimport { AdminUserAddComponent } from './admin-users/admin-user-add/admin-user-add.component';\nimport { AdminUserEditComponent } from './admin-users/admin-user-edit/admin-user-edit.component';\nimport { AdminSettingsComponent } from './admin-settings/admin-settings.component';\nimport { AdminTicketClassesComponent } from './admin-ticket-classes/admin-ticket-classes.component';\nimport { AdminClassManagerComponent } from './admin-class-manager/admin-class-manager.component';\nimport { AdminRecordListComponent } from './components/admin-record-list/admin-record-list.component';\nimport { LoadingModule } from '../loading/loading.module';\nimport { AdminAddRecordComponent } from './components/admin-add-record/admin-add-record.component';\nimport { AdminEditRecordComponent } from './components/admin-edit-record/admin-edit-record.component';\n\n\n\n@NgModule({\n  declarations: [AdminComponent, AdminAccessManagementComponent, AdminUsersComponent, AdminGroupsComponent, AdminRolesComponent, AdminUserAddComponent, AdminUserEditComponent, AdminSettingsComponent, AdminTicketClassesComponent, AdminClassManagerComponent, AdminRecordListComponent, AdminAddRecordComponent, AdminEditRecordComponent],\n  imports: [\n    CommonModule,\n    ClarityModule,\n    MaterialUiModule,\n    LoadingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","<div class=\"add-record-loading\" *ngIf=\"loading\">\n  <app-loading></app-loading>\n</div>\n\n<div class=\"add-record-container\" *ngIf=\"!loading\">\n  <div class=\"clr-row\" *ngFor=\"let row of form_view.rows\">\n    <div class=\"clr-col\" *ngFor=\"let f of row.fields\">\n  \n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'single-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <input matInput [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\">\n          <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n          <!-- <mat-hint>Hint</mat-hint> -->\n        </mat-form-field>\n  \n        <!-- multi-line-text -->\n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'multi-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <textarea matInput rows=\"5\" [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\"></textarea>\n        </mat-form-field>\n        <!-- end multi-line-text -->\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-multi-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" multiple>\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-single-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\">\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Paginated } from '@feathersjs/feathers';\n\n@Component({\n  selector: 'app-admin-add-record',\n  templateUrl: './admin-add-record.component.html',\n  styleUrls: ['./admin-add-record.component.scss']\n})\nexport class AdminAddRecordComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n  form_view: any;\n\n  loading: boolean = false;\n\n  view: [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loading = true;\n\n    this.form_view = this.current_meta.form_views.add;\n\n    for ( var row in this.form_view.rows ) {\n      for ( var field in this.form_view.rows[row].fields ) {\n        if( this.form_view.rows[row].fields[field].reference ) {\n          this.populateReferenceOptions( this.form_view.rows[row].fields[field] )\n\n\n        }\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async populateReferenceOptions(field) {\n    this.dataService.records$(field.reference.service, field.reference.filter)\n      .subscribe( res => {\n        field.reference.optionList = res.data;\n\n        console.log(this.form_view)\n      });\n  }\n\n}\n\n// let service = this.form_view.rows[row].fields[field].reference.service;\n// let filter = this.form_view.rows[row].fields[field].reference.filter;\n\n// this.dataService.records$(service, filter)\n//   .subscribe( res => {\n//     console.log(this.form_view.rows[row].fields[field].reference)\n//     this.form_view.rows[row].fields[field].reference.optionList = res.data;\n//     console.log(this.form_view.rows[row].fields[field])\n//   });\n","<div class=\"add-record-loading\" *ngIf=\"loading\">\n  <app-loading></app-loading>\n</div>\n\n<div class=\"add-record-container\" *ngIf=\"!loading\">\n  <div class=\"clr-row\" *ngFor=\"let row of form_view.rows\">\n    <div class=\"clr-col\" *ngFor=\"let f of row.fields\">\n  \n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'single-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <input matInput [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\">\n          <!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\n          <!-- <mat-hint>Hint</mat-hint> -->\n        </mat-form-field>\n  \n        <!-- multi-line-text -->\n        <mat-form-field class=\"w-100\" appearance=\"outline\" *ngIf=\"f.type == 'multi-line-text'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <textarea matInput rows=\"5\" [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" placeholder=\"{{ f.name }}\"></textarea>\n        </mat-form-field>\n        <!-- end multi-line-text -->\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-multi-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\" multiple>\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\" class=\"w-100\" *ngIf=\"f.type == 'reference-single-select'\">\n          <mat-label>{{ f.name }}</mat-label>\n          <mat-select [(ngModel)]=\"userRecord[f.field]\" name=\"{{ f.field }}\">\n            <!-- <mat-select-trigger>\n              {{toppings.value ? toppings.value[0] : ''}}\n              <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n                (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n              </span>\n            </mat-select-trigger> -->\n            <mat-option *ngFor=\"let option of f.reference.optionList\" [value]=\"option._id\">{{ option[f.reference.display_field] }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-admin-edit-record',\n  templateUrl: './admin-edit-record.component.html',\n  styleUrls: ['./admin-edit-record.component.scss']\n})\nexport class AdminEditRecordComponent implements OnInit {\n\n  @Input('userRecord') userRecord: any;\n  @Input('current_meta') current_meta: any;\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n\n  form_view: any;\n\n  loading: boolean = false;\n\n  view: [];\n\n  constructor(\n    private dataService: DataService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.loading = true;\n\n    this.form_view = this.current_meta.form_views.add;\n\n    if(this.current_meta.form_views.edit) {\n      this.form_view = this.current_meta.form_views.edit;\n    }\n\n    for ( var row in this.form_view.rows ) {\n      for ( var field in this.form_view.rows[row].fields ) {\n        if( this.form_view.rows[row].fields[field].reference ) {\n          this.populateReferenceOptions( this.form_view.rows[row].fields[field] )\n\n\n        }\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async populateReferenceOptions(field) {\n    this.dataService.records$(field.reference.service, field.reference.filter)\n      .subscribe( res => {\n        field.reference.optionList = res.data;\n\n        console.log(this.form_view)\n      });\n  }\n}\n","import { Component, OnInit, OnDestroy, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Paginated } from '@feathersjs/feathers';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-record-list',\n  templateUrl: './admin-record-list.component.html',\n  styleUrls: ['./admin-record-list.component.scss'],\n})\nexport class AdminRecordListComponent implements OnInit, OnDestroy, OnChanges {\n\n  table: any = null;\n  table_display_name: any = null;\n\n  current_meta: any;\n\n  recs: any = [];\n\n  recordSub: Subscription;\n\n  loading: boolean = false;\n\n  records$: Observable<any> = null;\n  selected = null;\n  sideOpen: boolean = false;\n  addUser: boolean = false;\n  editUser: boolean = false;\n\n  detailState = null;\n\n  userRecord: any = {};\n  selectedUser: any = null;\n\n  alertSuccess = {\n    active: false,\n    message: 'test'\n  }\n\n  alertError = {\n    active: false,\n    message: 'test'\n  }\n\n  constructor(\n    private dataService: DataService,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function(){\n      return false;\n   }\n\n\n    //this.loadUsers();\n  }\n\n  ngOnDestroy(): void {\n    console.log('destroy!')\n    this.records$ = null;\n    this.records$ = null;\n    this.table = null;\n    this.current_meta = null;\n\n    this.recordSub.unsubscribe();\n  }\n\n  ngOnChanges(): void {\n    console.log('changes');\n  }\n\n  ngOnInit(): void {\n\n    this.records$ = null;\n    this.table = null;\n    this.current_meta = null;\n\n    this.loading = true;\n\n    this.activatedRoute.params\n      .subscribe( params => {\n        // this.initialiseState();\n        this.table = params.table;\n\n        this.table_display_name = this.tables[`${this.table}`].display_name;\n        this.current_meta = this.tables[`${this.table}`];\n\n        this.loadRecords();\n\n        \n      })\n\n  }\n\n\n  loadRecords() {\n    if(this.table == 'users') {\n      this.records$ = this.dataService.records$(this.table, {})\n      .pipe(\n        map(( r: Paginated<any>) => r.data),\n\n      )\n    }\n    else {\n      this.records$ = this.dataService.records$(`api/admin/${this.table}`, {})\n        .pipe(\n          map(( r: Paginated<any>) => r.data)\n        )\n    }\n\n\n    this.recordSub = this.records$.subscribe( records => {\n      let lv = this.tables[this.table].list_view;\n      lv.cols.forEach( col => {\n        if( col.reference ) {\n          records.forEach( record => {\n            if(record[col.field]) {\n              this.dataService.record$(col.reference.service, record[col.field])\n              .subscribe( res => {\n                record[`${col.field}`] = res;\n\n                this.recs.push(record);\n\n                console.log(record);\n              }).remove();\n            } else {\n              this.recs.push(record);\n            }\n\n          })\n        }\n      })\n\n      console.log(records);\n      this.loading = false;\n      console.log(this.loading);\n    })\n  }\n\n\n  onAdd() {\n\n    this.addUser = true;\n    this.sideOpen = true;\n\n\n  }\n\n  onUpdate() {\n    this.dataService.updateRecord(this.current_meta.service, this.userRecord._id, this.userRecord)\n      .then( res => {\n        this.alertSuccess.active = true;\n        this.alertSuccess.message = 'The changes to the record have been saved to the database.'\n        \n\n\n        setTimeout( () => {\n          this.alertSuccess.active = false;\n          this.alertSuccess.message = '';\n          // this.userRecord = {};\n          this.sideOpen = false;\n          this.editUser = false;\n          this.onClose();\n        }, 3000)\n      })\n      .catch( error => {\n        this.alertError.active = true;\n        this.alertError.message = error;\n      })\n\n    console.log(this.userRecord);\n  }\n\n  onSave() {\n\n    this.dataService.createRecord(this.current_meta.service, this.userRecord)\n    .then( res => {\n      console.log('---- CREATE RES ----');\n      this.alertSuccess.active = true;\n      this.alertSuccess.message = 'The record has been added to the database.'\n      \n      console.log('---- CREATE END ----');\n\n      this.onClose();\n\n      setTimeout( () => {\n        this.alertSuccess.active = false;\n        this.alertSuccess.message = '';\n      }, 3000)\n    })\n    .catch( error => {\n      this.alertError.active = true;\n      this.alertError.message = error;\n    })\n\n  }\n\n  onClose() {\n    this.sideOpen = false;\n    this.addUser = false;\n    this.editUser = false;\n    this.selected = {};\n    this.selectedUser = null;\n    this.userRecord = {};\n    this.loading = false;\n    // console.log(this.selectedUser);\n    //this.selectedUser = {};\n\n    setTimeout( () => {\n      this.alertSuccess.active = false;\n      this.alertError.active = false;\n    }, 3000);\n  }\n\n  onDelete() {\n\n    this.authService.logIn()\n      .then( res => {\n        this.userRecord.deleted_by = res.user._id;\n        this.userRecord.deleted_at = new Date();\n\n        let deleteThis = this.userRecord;\n\n        this.dataService.createRecord('deleted-records', deleteThis)\n          .then(res => {\n            this.onClose();\n            this.dataService.deleteRecord('users', deleteThis._id, {})\n              .then( res => {\n                this.alertSuccess.active = true;\n                this.alertSuccess.message = 'The user records was deleted from the database.';\n                //this.onClose();\n              })\n          })\n          .catch( err => {\n            this.alertError.active = true;\n            this.alertError.message = err;\n            //this.onClose();\n          })\n      })\n      .catch( err => {\n        this.alertError.active = true;\n        this.alertError.message = err;\n        //this.onClose();\n      })\n\n  }\n\n  recordSelected(record) {\n    this.loading = true;\n    setTimeout( () => {\n      this.userRecord = record;\n      this.selectedUser = record;\n      this.sideOpen = true;\n      this.editUser = true;\n    }, 1000);\n  }\n\n  onEdit() {\n\n  }\n\n  onExportSelected() {}\n\n  onExportAll() {}\n\n\n  tables = {\n    users: {\n      display_name: 'Users',\n      singular_name: 'User',\n      icon: 'user',\n      service: 'users',\n      list_view: {\n        cols: [\n          {\n            name: 'Display Name',\n            field: 'display_name'\n          },\n          {\n            name: 'First Name',\n            field: 'first_name'\n          },\n          {\n            name: 'Last Name',\n            field: 'last_name'\n          },\n          {\n            name: 'Email Address',\n            field: 'email'\n          }\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Display Name',\n                  field: 'display_name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'First Name',\n                  field: 'first_name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Last Name',\n                  field: 'last_name',\n                  type: 'single-line-text'\n                },\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Groups',\n                  field: 'groups',\n                  type: 'reference-multi-select',\n                  reference: {\n                    service: 'api/admin/groups',\n                    display_field: 'name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Roles',\n                  field: 'roles',\n                  type: 'reference-multi-select',\n                  reference: {\n                    service: 'api/admin/roles',\n                    display_field: 'name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Password',\n                  field: 'password',\n                  type: 'single-line-text'\n                },\n              ]\n            }\n          ]\n        },\n        edit: {\n          mafin_section: {\n            rows: [\n              {\n                fields: [\n                  {\n                    name: 'Display Namde',\n                    field: 'display_name',\n                    type: 'single-line-text'\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'First Name',\n                    field: 'first_name',\n                    type: 'single-line-text'\n                  },\n                  {\n                    name: 'Last Name',\n                    field: 'last_name',\n                    type: 'single-line-text'\n                  },\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Email Address',\n                    field: 'email',\n                    type: 'single-line-text'\n                  },\n                  {\n                    name: 'Manager',\n                    field: 'manager',\n                    type: 'reference-single-select',\n                    reference: {\n                      service: 'users',\n                      display_field: 'display_name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Groups',\n                    field: 'groups',\n                    type: 'reference-multi-select',\n                    reference: {\n                      service: 'api/admin/groups',\n                      display_field: 'name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Roles',\n                    field: 'roles',\n                    type: 'reference-multi-select',\n                    reference: {\n                      service: 'api/admin/roles',\n                      display_field: 'name',\n                      filter: null\n                    }\n                  }\n                ]\n              },\n              {\n                fields: [\n                  {\n                    name: 'Password',\n                    field: 'password',\n                    type: 'single-line-text'\n                  },\n                ]\n              }\n            ]\n\n          },\n          other_section: {\n\n          },\n          related_section: [\n            {\n              name: \"Groups\",\n              service: \"api/admin/groups\"\n            }\n          ],\n          actions_section: {\n\n          },\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Display Name',\n                  field: 'display_name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'First Name',\n                  field: 'first_name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Last Name',\n                  field: 'last_name',\n                  type: 'single-line-text'\n                },\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Password',\n                  field: 'password',\n                  type: 'single-line-text'\n                },\n              ]\n            }\n          ]\n        }\n      }\n    },\n    groups: {\n      display_name: 'Groups',\n      singular_name: 'Group',\n      icon: 'users',\n      service: 'api/admin/groups',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: 'name',\n          },\n          {\n            name: 'Manager',\n            field: 'manager',\n            reference: {\n              service: 'users',\n              display_field: 'display_name',\n              filter: null\n            }\n          },\n          {\n            name: 'Email Address',\n            field: 'email_address'\n          },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: 'name',\n                  type: 'single-line-text'\n                },\n                {\n                  name: 'Manager',\n                  field: 'manager',\n                  type: 'reference-single-select',\n                  reference: {\n                    service: 'users',\n                    display_field: 'display_name',\n                    filter: null\n                  }\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Email Address',\n                  field: 'email_address',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Notes',\n                  field: 'notes',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    roles: {\n      display_name: 'Roles',\n      singular_name: 'Role',\n      icon: 'employee-group',\n      service: 'api/admin/roles',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: 'name',\n          },\n          // {\n          //   name: 'Manager',\n          //   field: 'manager',\n          //   reference: {\n          //     service: 'users',\n          //     display_field: 'display_name',\n          //     filter: null\n          //   }\n          // },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: 'name',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Notes',\n                  field: 'notes',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n    settings: {\n      display_name: 'Settings',\n      singular_name: 'settings',\n      icon: 'users',\n      service: 'api/admin/settings',\n      list_view: {\n        cols: [\n          {\n            name: 'Name',\n            field: '_id',\n          },\n          {\n            name: 'Value',\n            field: 'value',\n          },\n          {\n            name: 'Description',\n            field: 'description',\n          },\n          // {\n          //   name: 'Manager',\n          //   field: 'manager',\n          //   reference: {\n          //     service: 'users',\n          //     display_field: 'display_name',\n          //     filter: null\n          //   }\n          // },\n        ]\n      },\n      form_views: {\n        add: {\n          rows: [\n            {\n              fields: [\n                {\n                  name: 'Name',\n                  field: '_id',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Value',\n                  field: 'value',\n                  type: 'single-line-text'\n                }\n              ]\n            },\n            {\n              fields: [\n                {\n                  name: 'Description',\n                  field: 'description',\n                  type: 'multi-line-text'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    },\n  }\n\n}\n","<mat-sidenav-container class=\"main-container\" style=\"height: 100%;\">\n  <mat-sidenav position=\"end\" style=\"min-width: 100%;\" [opened]=\"sideOpen\">\n\n    <div class=\"main-container\" style=\"height: 100%;\">\n      <header class=\"header header-4\">\n        <div class=\"branding\">\n          <a routerLink=\"./\" class=\"nav-link\">\n              <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n              <span class=\"title\" *ngIf=\"addUser\">Add {{ current_meta.singular_name }}</span>\n              <span class=\"title\" *ngIf=\"editUser && selectedUser\">{{ selectedUser.display_name }}</span>\n          </a>\n        </div>\n    \n        <div class=\"header-actions\" *ngIf=\"addUser\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n\n        <div class=\"header-actions\" *ngIf=\"editUser\">\n          <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onUpdate();\">\n              <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n            <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n          </a>\n          <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n            <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n          </a>\n        </div>\n      </header>\n      <div class=\"content-container\">\n        <div class=\"content-area\">\n          <!-- <app-add-record *ngIf=\"addUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-user-add>\n          <app-admin-user-edit *ngIf=\"editUser\" [userRecord]=\"userRecord\"></app-admin-user-edit> -->\n          <app-admin-add-record *ngIf=\"addUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-add-record>\n          <!-- <app-admin-add-record *ngIf=\"editUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-add-record> -->\n          <app-admin-edit-record *ngIf=\"editUser\" [current_meta]=\"current_meta\" [userRecord]=\"userRecord\"></app-admin-edit-record>\n        </div>\n      </div>\n    </div>\n\n  </mat-sidenav>\n  <mat-sidenav-content>\n\n    <div class=\"alert alert-app-level alert-success\" role=\"alert\" *ngIf=\"alertSuccess.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertSuccess.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n\n    <div class=\"alert alert-app-level alert-danger\" role=\"alert\" *ngIf=\"alertError.active\">\n      <div class=\"alert-items\">\n          <div class=\"alert-item static\">\n              <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"check-circle\"></clr-icon>\n              </div>\n              <div class=\"alert-text\">\n                  {{ alertError.message }}\n              </div>\n              <!-- <div class=\"alert-actions\">\n                  <button class=\"btn alert-action\">Action</button>\n              </div> -->\n          </div>\n      </div>\n      <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button> -->\n    </div>\n  <header class=\"header header-4\">\n    <div class=\"branding\">\n      <a routerLink=\"./\" class=\"nav-link\">\n          <!-- <clr-icon shape=\"vm-bug\"></clr-icon> -->\n          <span class=\"title\">{{ table_display_name }}</span>\n      </a>\n    </div>\n    <div class=\"header-nav\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" (click)=\"onAdd();\" *ngIf=\"table != 'settings'\">\n        <clr-icon shape=\"plus-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n    <div class=\"flex-header-container\">\n      <div class=\"box-container box-container-highlight\">\n        <clr-icon shape=\"search\"></clr-icon>\n        <input autocomplete=\"off\" name=\"list-filter\" placeholder=\"Search...\" type=\"text\" />\n      </div>\n    </div>\n\n    <div class=\"header-actions\">\n      <a href=\"javascript:void(0);\" class=\"nav-link nav-icon\" aria-label=\"save\" (click)=\"onSave();\">\n          <clr-icon shape=\"floppy\" class=\"is-solid\"></clr-icon>\n      </a>\n      <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onDelete();\" *ngIf=\"editUser\">\n        <clr-icon shape=\"trash\" class=\"is-solid\"></clr-icon>\n      </a>\n      <a href=\"javascript:void(0);\"  class=\"nav-link nav-icon\" aria-label=\"cancel\" (click)=\"onClose();\">\n        <clr-icon shape=\"times-circle\" class=\"is-solid\"></clr-icon>\n      </a>\n    </div>\n  </header>\n  <!-- <nav class=\"subnav\">\n      ...\n  </nav> -->\n  <div class=\"content-container\" style=\"height: calc(100% - 60px);\">\n      <div class=\"content-area\" style=\"text-align: center; margin-top: 200px;\" *ngIf=\"loading\">\n        <app-loading></app-loading>\n      </div>\n      <div class=\"content-area\" style=\"padding: 0 !important;\" *ngIf=\"!loading\">\n        <div class=\"admin-data\" *ngIf=\"records$ | async as records\" style=\"height: 100%;\">\n          <clr-datagrid [(clrDgSingleSelected)]=\"selectedUser\" [clrDgRowSelection]=\"true\"\n            style=\"min-height: 100% !important; border: 0 !important;\">\n        \n        \n            <clr-dg-column [clrDgField]=\"col.field\" *ngFor=\"let col of current_meta.list_view.cols\">\n              <ng-container *clrDgHideableColumn=\"{hidden: false}\">\n                <span>\n                  {{ col.name }}\n                </span>\n              </ng-container>\n            </clr-dg-column>\n\n\n            <!-- <clr-dg-column [clrDgField]=\"'updated_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                Created\n              </ng-container>\n            </clr-dg-column>\n\n            <clr-dg-column [clrDgField]=\"'created_at'\">\n              <ng-container *clrDgHideableColumn=\"{hidden: true}\">\n                Updated\n              </ng-container>\n            </clr-dg-column> -->\n\n          \n            <clr-dg-row *clrDgItems=\"let r of records\" (click)=\"recordSelected(r)\" [clrDgItem]=\"r\" [clrDgSelectable]=\"true\">\n              <clr-dg-cell *ngFor=\"let coll of current_meta.list_view.cols\">\n                <span *ngIf=\"!coll.reference\">\n                  {{r[coll.field]}}\n                </span>\n\n                <span *ngIf=\"coll.reference\">\n                  {{r[coll.field][coll.reference.display_field]}}\n                </span>\n              </clr-dg-cell>\n              <!-- <clr-dg-cell>{{r.created_at | date}}</clr-dg-cell>\n              <clr-dg-cell>{{r.updated_at | date}}</clr-dg-cell> -->\n            </clr-dg-row>\n        \n        \n            <!-- Record Details -->\n\n            <clr-dg-footer>\n\n              <clr-dg-pagination #pagination [clrDgPageSize]=\"30\">\n                <clr-dg-page-size [clrPageSizeOptions]=\"[30,50,100,200,500]\">Users per page</clr-dg-page-size>\n                {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n                of {{pagination.totalItems}} users\n              </clr-dg-pagination>\n\n            </clr-dg-footer>\n          </clr-datagrid>\n        \n          <!-- Selected users: <span *ngFor=\"let user of selected\">{{user.name}}</span> -->\n        </div>\n      </div>\n      <!-- <nav class=\"sidenav\">\n          ...\n      </nav> -->\n    </div>\n\n  </mat-sidenav-content>\n\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingComponent } from './loading/loading.component';\n\n\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LoadingComponent\n  ]\n})\nexport class LoadingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\nexport class LoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span class=\"spinner\">\n  Loading...\n</span>"]}