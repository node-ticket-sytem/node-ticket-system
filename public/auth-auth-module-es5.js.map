{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html"],"names":["routes","path","component","children","pathMatch","redirectTo","AuthRoutingModule","forChild","imports","exports","AuthComponent","selector","templateUrl","styleUrls","AuthModule","declarations","LoginComponent","authService","router","error","active","message","form","email","password","strategy","logIn","then","res","accessToken","navigate","err","login"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'login'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { ClarityModule } from '@clr/angular';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    ClarityModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error = {\n    active: false,\n    message: ''\n  }\n\n  form = {\n    email: '',\n    password: '',\n    strategy: 'local'\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  login() {\n    this.authService.logIn(this.form)\n      .then( res => {\n        if(res.accessToken) {\n          this.router.navigate(['/']);\n        }\n      })\n      .catch( err => {\n        this.error.active = true;\n        this.error.message = err.message;\n      })\n  }\n\n}\n","<div class=\"login-wrapper\">\n  <form class=\"login\">\n      <section class=\"title\">\n          <h3 class=\"welcome\">Welcome to</h3>\n          Node Ticket System\n          <h5 class=\"hint\">Use your email address to sign in.</h5>\n      </section>\n      <div class=\"login-group\">\n          <clr-select-container>\n              <label class=\"clr-sr-only\">User Role</label>\n              <select clrSelect name=\"strategy\" [(ngModel)]=\"form.strategy\">\n                  <option value=\"local\">Local Users</option>\n                  <option value=\"ldap\">Active Directory</option>\n              </select>\n          </clr-select-container>\n          <clr-input-container>\n              <label class=\"clr-sr-only\">Username</label>\n              <input type=\"text\" name=\"username\" clrInput placeholder=\"Email\" [(ngModel)]=\"form.email\"/>\n          </clr-input-container>\n          <clr-password-container>\n              <label class=\"clr-sr-only\">Password</label>\n              <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\" [(ngModel)]=\"form.password\"/>\n          </clr-password-container>\n          <!-- <clr-checkbox-wrapper>\n              <label>Remember me</label>\n              <input type=\"checkbox\" name=\"rememberMe\" clrCheckbox [(ngModel)]=\"form.rememberMe\"/>\n          </clr-checkbox-wrapper> -->\n          <div class=\"error active\" *ngIf=\"error.active\">\n              {{ error.message }}\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">\n              Sign In\n          </button>\n          <!-- <a href=\"javascript://\" class=\"signup\">Sign up for a Company ID</a> -->\n      </div>\n  </form>\n</div>"]}